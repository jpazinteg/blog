<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Azure Integration Support Blog</title>
  
  <subtitle>日本マイクロソフトの Azure Integration に関するサポート情報のブログです。</subtitle>
  <link href="https://jpazinteg.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://jpazinteg.github.io/blog/"/>
  <updated>2022-12-23T09:16:42.231Z</updated>
  <id>https://jpazinteg.github.io/blog/</id>
  
  <author>
    <name>Japan Azure Integration Support Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>「繰り返し (Recurrence)」トリガーの起動時刻の差異について</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/ScheduleTriggerStrattime/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/ScheduleTriggerStrattime/</id>
    <published>2022-11-06T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.231Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Integration サポート チームの髙橋です。<br>「繰り返し (Recurrence)」トリガーの想定される起動時刻と、実際の起動時刻に差異が生じる仕様の動作について説明します。</p><h2 id="こんな方におすすめです"><a href="#こんな方におすすめです" class="headerlink" title="こんな方におすすめです"></a>こんな方におすすめです</h2><ul><li>「繰り返し (Recurrence)」トリガーの想定される起動時刻と、実際の起動時刻に差異が生じる原因を知りたい方</li></ul><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>「繰り返し (Recurrence)」トリガーに関連する公開情報は以下になります。<ul><li>参考ドキュメント : <a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/concepts-schedule-automated-recurring-tasks-workflows">Azure Logic Apps ワークフローで繰り返し実行されるトリガーのスケジュール</a></li><li>参考ドキュメント : <a href="https://learn.microsoft.com/ja-jp/azure/connectors/connectors-native-recurrence?tabs=consumption">Azure Logic Apps で Recurrence トリガーを使用して繰り返しワークフローをスケジュール設定および実行する</a></li></ul></li></ul><h2 id="事象"><a href="#事象" class="headerlink" title="事象"></a>事象</h2><p>「繰り返し (Recurrence)」トリガーでは、想定される起動時刻よりも、稀に 0.5 秒 ～ 1 秒程度前後して起動することがございます。</p><h2 id="仕様"><a href="#仕様" class="headerlink" title="仕様"></a>仕様</h2><p>「実行の履歴」タブでご確認いただける履歴では、分単位までの表示のため、1 分の差異が生じているように見受けられることがございます。<br>※ 以下の例ですと、想定起動時刻は 13:10 ですが、「実行の履歴」タブのログでは 13:09 に起動しております。<br><img src="/blog/LogicApps/ScheduleTriggerStrattime/runHistory.jpg"></p><p>「トリガーの履歴」タブにて該当履歴の詳細をご確認いただきますと、1 秒程度の差となっております。<br>こちらは当該トリガーの仕様の動作となります。<br><img src="/blog/LogicApps/ScheduleTriggerStrattime/triggerHistory1.jpg"></p><p><img src="/blog/LogicApps/ScheduleTriggerStrattime/triggerHistory2.jpg"></p><p>Logic Apps では、定刻に処理を開始できるよう、トリガー起動時刻の約 1 秒前にストレージの読み込みを開始いたしますが、<br>その読み込み処理が想定より早く終わった、または遅く終わったことにより、このような差異が生じることがございます。</p><h2 id="回避策"><a href="#回避策" class="headerlink" title="回避策"></a>回避策</h2><p>たとえば Logic Apps で現在時刻を取得し、日付によってその後の処理を分岐させるような処理の場合には、後続処理に影響が出る可能性がございます。</p><p>例) 本来 10/1 0:00 に起動するところを、9/30 23:59:59 に起動したことにより、現在の日付が 9/30 と取得され、後続処理に影響が出る等</p><p>そのため、たとえば当該トリガーの開始時刻を「10/1 0:00:00」ではなく、5 秒程度加算した「10/1 0:00:05」とする方法が考えられます。</p><p>または、分岐処理にて現在時刻に 5 秒程度加算し、その上で日付を取得するような方法も考えられます。<br>現在時刻に 5 秒加算するには、addSeconds 関数もご用意もございます。</p><ul><li>参考ドキュメント : <a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#addSeconds">addSeconds</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。Azure Integration サポート チームの髙橋です。&lt;br&gt;「繰り返し (Recurrence)」トリガーの想定される起動時刻と、実際の起動時刻に差異が生じる仕様の動作について説明します。&lt;/p&gt;
&lt;h2 id=&quot;こんな方におすすめです&quot;&gt;&lt;a hr</summary>
      
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Trigger" scheme="https://jpazinteg.github.io/blog/tags/Trigger/"/>
    
  </entry>
  
  <entry>
    <title>Logic Apps で簡単に日付や時刻を用いる</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/LogicApps-DateTime/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/LogicApps-DateTime/</id>
    <published>2022-11-04T07:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.227Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。  Azure Integration サポート チームの山田です。<br>今回は、 Logic Apps における日付や時刻の取り扱いについて、特に日本国内での利用に便利な Tips をご紹介いたします！</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>Logic Apps で日付や時刻を用いる</li><li>タイム ゾーンの変換を行う</li><li>フォーマットを指定して日時を表示する</li><li>期間計算を行う</li></ul><h2 id="Logic-Apps-で日付や時刻を用いる"><a href="#Logic-Apps-で日付や時刻を用いる" class="headerlink" title="Logic Apps で日付や時刻を用いる"></a>Logic Apps で日付や時刻を用いる</h2><p>大きく以下の操作方法がございます。</p><ul><li>日付/時刻 コネクタ: <a href="https://learn.microsoft.com/ja-jp/azure/connectors/built-in#manage-or-manipulate-data">組み込みコネクタの概要 - Azure Logic Apps | Microsoft Learn</a></li><li>関数: <a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#date-and-time-functions">式関数のリファレンス ガイド - Azure Logic Apps | Microsoft Learn</a></li></ul><h2 id="タイム-ゾーンの変換を行う"><a href="#タイム-ゾーンの変換を行う" class="headerlink" title="タイム ゾーンの変換を行う"></a>タイム ゾーンの変換を行う</h2><p><a href="https://learn.microsoft.com/ja-jp/azure/connectors/built-in#manage-or-manipulate-data">日付/時刻 コネクタ</a> から「タイム ゾーンの変換」が行えます。</p><p><img src="/blog/LogicApps/LogicApps-DateTime/image000.png"> </p><p>ほか、<a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#converttimezone">convertTimeZone</a>、<a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#convertFromUtc">convertFromUtc</a>、<a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#converttoutc">converttoUtc</a> という関数を利用できます。</p><h2 id="フォーマットを指定して日時を表示する"><a href="#フォーマットを指定して日時を表示する" class="headerlink" title="フォーマットを指定して日時を表示する"></a>フォーマットを指定して日時を表示する</h2><p><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#convertFromUtc">convertFromUtc</a> という関数を利用できます。</p><ul><li>例: <code>convertFromUtc(utcNow(),&#39;Tokyo Standard Time&#39;,&#39;yyyy/MM/dd HH:mm:ss&#39;)</code></li></ul><p><img src="/blog/LogicApps/LogicApps-DateTime/image004.png"> </p><h2 id="期間計算を行う"><a href="#期間計算を行う" class="headerlink" title="期間計算を行う"></a>期間計算を行う</h2><p>対象日時同士の比較を行える <a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#datedifference">dateDifference</a> という関数を利用できます。</p><ul><li>例: <code>int(split(dateDifference(formatDateTime(&#39;10/01/2022&#39;),utcNow()),&#39;.&#39;)[0])</code></li></ul><p><img src="/blog/LogicApps/LogicApps-DateTime/image001.png"> </p><p><img src="/blog/LogicApps/LogicApps-DateTime/image002.png"> </p><p><img src="/blog/LogicApps/LogicApps-DateTime/image003.png"> </p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>以上、簡単にご案内いたしました。</p><ul><li>日付/時刻 コネクタ: <a href="https://learn.microsoft.com/ja-jp/azure/connectors/built-in#manage-or-manipulate-data">組み込みコネクタの概要 - Azure Logic Apps | Microsoft Learn</a></li><li>関数: <a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#date-and-time-functions">式関数のリファレンス ガイド - Azure Logic Apps | Microsoft Learn</a></li></ul><p>本記事が少しでも理解の足がかりになりましたら幸いです。最後までお読みいただき、ありがとうございました！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。  Azure Integration サポート チームの山田です。&lt;br&gt;今回は、 Logic Apps における日付や時刻の取り扱いについて、特に日本国内での利用に便利な Tips をご紹介いたします！&lt;/p&gt;</summary>
    
    
    
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>Logic Apps の式関数で Unix Time を取得する方法</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/UnixTime/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/UnixTime/</id>
    <published>2022-11-02T01:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.231Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。 Azure Integration サポート チームの大田です。<br>本記事では、Logic Apps の式関数を組み合わせて Unix Time を取得する方法について説明いたします。</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>今回の記事では従量課金版ロジック アプリを利用しますが、スタンダード版のロジック アプリでも問題ありません。</li></ul><h2 id="Unix-Time-の取得サンプル"><a href="#Unix-Time-の取得サンプル" class="headerlink" title="Unix Time の取得サンプル"></a>Unix Time の取得サンプル</h2><p>Logic Apps が備える Unix Time と類似の機能として ticks 関数がございます。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#ticks">ticks 関数に関する公開情報</a></li></ul><p>1 tick はグレゴリオ暦の 0001 年 1 月 1 日午前 12 時 00 分 00 分からの 100 ナノ秒単位の経過時間を表します。<br>ticks 関数は指定のタイムスタンプの tick 数を返す関数でございます。</p><p>また、Unix Time は UTC 時間の 1970 年 1 月 1 日午前 12 時 00 分 00 分からの経過秒数を表します。<br>そのため、1970 年 1 月 1 日午前 12 時 00 分 00 分の tick 数と対象日時の tick 数に関する差分を 100 ナノ秒単位から秒単位に変換する事で対象日時の Unix Time を取得する事が可能です。<br>100 ナノ秒単位から秒単位への変換は 10^7 で割る事により行えます。</p><p>下記が現在日時（UTC 時間）の Unix Time を取得するサンプルとなります。<br><img src="/blog/LogicApps/UnixTime/unixTime_CurrentTime.png"></p><ul><li>名前：unixTime</li><li>種類：整数</li><li>値：@div(sub(ticks(utcnow()),ticks(‘1970-01-01’)), 10000000)</li></ul><p>また下記のように値を設定する事で、指定日付の Unix Time の取得を行えます。<br>本サンプルでは UTC 時間の 2022 年 10 月 31 日午前 12 時 00 分 00 分の Unix Time を取得しております。<br><img src="/blog/LogicApps/UnixTime/unixTime_SpecificTime.png"></p><ul><li>名前：unixTime</li><li>種類：整数</li><li>値：@div(sub(ticks(formatDateTime(‘2022-10-31’)),ticks(‘1970-01-01’)), 10000000)</li></ul><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では Logic Apps の式関数で Unix Time を取得する方法について説明いたしました。 Unix Time は Rest API で多く活用されているため、本記事がお客様のシステム構築の一助になりますと幸いです。</p><h2 id="参考情報"><a href="#参考情報" class="headerlink" title="参考情報"></a>参考情報</h2><ul><li><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#ticks">ticks 関数に関する公開情報</a></li><li><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#sub">sub 関数に関する公開情報</a></li><li><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#div">div 関数に関する公開情報</a></li><li><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#formatdatetime">formatDateTime 関数に関する公開情報</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。 Azure Integration サポート チームの大田です。&lt;br&gt;本記事では、Logic Apps の式関数を組み合わせて Unix Time を取得する方法について説明いたします。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Unix Time" scheme="https://jpazinteg.github.io/blog/tags/Unix-Time/"/>
    
  </entry>
  
  <entry>
    <title>ワークフロー式関数 xml() を用いて 10 進数の値を変換するときの動作について</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/XmlBehaviorWithNumbers/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/XmlBehaviorWithNumbers/</id>
    <published>2022-10-27T06:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.231Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。  Azure Integration サポート チームの継松です。<br>Azure Logic Apps では式関数を使用し、ワークフローの実行中にアクションから取得した値の参照や処理を行うことができます。<br>今回は、式関数の 1 つである xml() の動作についてご紹介します。<br>特に、 10 進数の値が含まれる場合に生じる事象および事象の回避策についてご案内します。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>xml() 関数について</li><li>10 進数の値を変換するときの動作について</li><li>事象の回避策について</li><li>まとめ</li></ul><h2 id="xml-関数について"><a href="#xml-関数について" class="headerlink" title="xml() 関数について"></a>xml() 関数について</h2><p>xml(‘<value>‘) では、JSON オブジェクトを含む文字列の XML バージョンを返します。</p><p>例<br>xml(‘<name>Sophia Owen</name>‘)</p><p>結果 : </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Sophia Owen<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><p>式関数のリファレンス ガイド - Azure Logic Apps | Microsoft Learn #xml<br><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#xml">https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference#xml</a></p><h2 id="10-進数の値を変換するときの動作について"><a href="#10-進数の値を変換するときの動作について" class="headerlink" title="10 進数の値を変換するときの動作について"></a>10 進数の値を変換するときの動作について</h2><p>以下に示す通り、この xml() 関数を使用して 10 進数の  JSON オブジェクトを含む値を変換すると、浮動小数点の精度に問題が生じる場合がございます。</p><p><img src="/blog/LogicApps/XmlBehaviorWithNumbers/issuewithxml.png"></p><p>こちらはこの xml() 関数で使用される以下のサード パーティの NewtonSoft パッケージによる既知の問題です。</p><p>JToken.ToObject(T) Method (JsonSerializer)<br><a href="https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_Linq_JToken_ToObject__1_1.htm">https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_Linq_JToken_ToObject__1_1.htm</a></p><p>NewtonSoft は浮動小数点数を .NET double 型にロードします。これにより、浮動小数点を文字列に変換する際に精度の損失が生じます。</p><p>JsonSerializerSettings.FloatParseHandling Property<br><a href="https://www.newtonsoft.com/json/help/html/P_Newtonsoft_Json_JsonSerializerSettings_FloatParseHandling.htm">https://www.newtonsoft.com/json/help/html/P_Newtonsoft_Json_JsonSerializerSettings_FloatParseHandling.htm</a></p><h2 id="事象の回避策について"><a href="#事象の回避策について" class="headerlink" title="事象の回避策について"></a>事象の回避策について</h2><p>現時点では、以下に示す通り、値を文字列として指定することで、事象を回避いただけます。</p><p><img src="/blog/LogicApps/XmlBehaviorWithNumbers/issuewithxml_workaround.png"></p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では xml() 関数の動作および 10 進数の値を変換する場合の事象回避策についてご紹介いたしました。<br>他にも、便利な式関数が複数ご用意ございますので、下記の公開資料からご参照いただけますと幸いでございます。</p><p>式関数のリファレンス ガイド - Azure Logic Apps | Microsoft Learn<br><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference">https://learn.microsoft.com/ja-jp/azure/logic-apps/workflow-definition-language-functions-reference</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。  Azure Integration サポート チームの継松です。&lt;br&gt;Azure Logic Apps では式関数を使用し、ワークフローの実行中にアクションから取得した値の参照や処理を行うことができます。&lt;br&gt;今回は、式関数の 1 つである xml() の動作についてご紹介します。&lt;br&gt;特に、 10 進数の値が含まれる場合に生じる事象および事象の回避策についてご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Issues" scheme="https://jpazinteg.github.io/blog/tags/Issues/"/>
    
  </entry>
  
  <entry>
    <title>Excel Onlne コネクタでテーブルが一覧表示されない場合の回避策</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/ExcelOnlineGetaRow/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/ExcelOnlineGetaRow/</id>
    <published>2022-10-17T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.187Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Integration サポート チームの 川合 です。<br>Logic Apps で利用できる Excel Online  (Business) コネクタにて、Excel の行の情報を取得する際にアクションの設定で対象のテーブルが表示されない場合がございます。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/connectors/excelonlinebusiness/#%E8%A1%8C%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B">Excel Online (Business) - 行を取得する</a><br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image001.png"></li></ul><p>今回は、その事象が発生した際の対処法についてご案内いたします。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>事象の詳細について</li><li>事象が発生した際の回避策について</li><li>まとめ</li></ul><h2 id="事象の詳細について"><a href="#事象の詳細について" class="headerlink" title="事象の詳細について"></a>事象の詳細について</h2><p>本記事の事象につきましては、以下の操作を行った際に発生する事象となります。</p><p>１．コネクタを選択する。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image002.png"></p><p>２．対象の Excel ファイルが存在する “場所” “ドキュメントライブラリ” “ファイル” を選択する。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image003.png"></p><p>３．プルダウンより “テーブル” を選択するが、表示されない。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image001.png"></p><p>以上が本記事の事象となります。<br>なお、こちらにつきましては Logic Apps のみで発生する既知の事象でございます。Power Automate では事象は発生いたしません。<br>また、お客様にはご不便をおかけしますが、上記の振る舞いについてはプログラムの変更等の予定はございません。<br>その為、事象が発生した際の回避策につきまして、以下に記載いたします。</p><h2 id="事象が発生した際の回避策について"><a href="#事象が発生した際の回避策について" class="headerlink" title="事象が発生した際の回避策について"></a>事象が発生した際の回避策について</h2><p>上記事象が発生した際の回避策につきましては、”テーブル” の項目に直接 Excel ファイルに設定いただいておりますテーブルの値をカスタム値として入力いただくことで、テーブルの設定および後続の項目について設定することが可能でございます。<br>具体的な操作方法につきましては以下の通りでございます。</p><p>＜操作方法＞<br>１．Excel ファイルに設定しているテーブルの値を控える。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image004.png"></p><p>２．コネクタを選択し、対象の Excel ファイルが存在する “場所” “ドキュメントライブラリ” “ファイル” を選択する。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image003.png"></p><p>３．”テーブル” のプルダウンより、行を取得したいテーブルの値をカスタム値入力する。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image005.png"></p><p><img src="/blog/LogicApps/ExcelOnlineGetaRow/image006.png"></p><p>４．上記の通り設定し、対象の “キー列” が表示されることを確認する。<br><img src="/blog/LogicApps/ExcelOnlineGetaRow/image007.png"></p><p>以上より、行の取得アクションにてテーブルの値を設定することが可能となります。<br>お手数をおかけして誠に申し訳ございませんが、本事象が発生しました際には、当ブログの手順にて回避策をお試しいただきますようお願い申し上げます。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内いたしましたが、ご理解いただけましたでしょうか。</p><ul><li>事象の詳細について</li><li>事象が発生した際の回避策について</li></ul><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p><p>&lt;Azure Logic Apps の参考サイト&gt;<br>– 概要 - Azure Logic Apps とは<br><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview">https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview</a><br>Azure Logic Apps とは、ロジック アプリ デザイナーでフロー チャートを用いて作成したワークフローを自動実行するソリューションです。<br>Azure Logic Apps では、条件分岐などを実装することができ、ワークフローの実行状況に応じて実行する処理を分岐することが可能です。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは！Azure Integration サポート チームの 川合 です。&lt;br&gt;Logic Apps で利用できる Excel Online  (Business) コネクタにて、Excel の行の情報を取得する際にアクションの設定で対象のテーブルが表示されない場合がございます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/ja-jp/connectors/excelonlinebusiness/#%E8%A1%8C%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B&quot;&gt;Excel Online (Business) - 行を取得する&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/blog/LogicApps/ExcelOnlineGetaRow/image001.png&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回は、その事象が発生した際の対処法についてご案内いたします。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Excel Onlne" scheme="https://jpazinteg.github.io/blog/tags/Excel-Onlne/"/>
    
  </entry>
  
  <entry>
    <title>ファイアウォール設定配下の既存ストレージ アカウントに Standard Logic Apps を作成</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/SecBlobStandardLA/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/SecBlobStandardLA/</id>
    <published>2022-10-13T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.231Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Integration サポート チームの 川合 です。<br>Standard Logic Apps （シングルテナント） を作成するにはストレージ アカウントを利用する必要がございます。<br>しかし、ファイアウォールで通信制御を行ったストレージ アカウント配下には Azure Portal から Standard Logic Apps を構築することが出来ません。<br>今回は ARM テンプレートを用いて ファイアウォール設定を有効にした既存のストレージ アカウント配下に Standard Logic Apps を構築する方法についてご案内します。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>前提</li><li>ARM テンプレートの編集</li><li>まとめ</li></ul><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>今回の記事については以下の情報を参考にしております。</p><ul><li><p><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/deploy-single-tenant-logic-apps-private-storage-account#deploy-using-azure-portal-or-visual-studio-code">Azure portal または Visual Studio Code を使用してデプロイする</a></p></li><li><p><a href="https://github.com/VeeraMS/LogicApp-deployment-with-Secure-Storage">Deploy Logic App with Secured storage account having Private Endpoints</a></p></li></ul><p>なお、今回の手順では ARM テンプレートを Azure PowerShell にてデプロイ致します。</p><p>また、予めストレージ アカウントおよび Standard Logic Apps を構築する VNet を作成いただく必要がございます。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/azure/storage/common/storage-account-create?tabs=azure-portal">ストレージ アカウントを作成する</a></li><li><a href="https://learn.microsoft.com/ja-jp/azure/virtual-network/manage-virtual-network">仮想ネットワークの作成、変更、削除</a></li></ul><p>上記の環境が構築されており、かつストレージ アカウントがプライベート エンドポイントに接続されていることを前提に本手順を実施いただきます。<br>テーブル、キュー、BLOB、ファイル ストレージ サービスごとに異なるプライベート エンドポイントを作成することで、プライベートな環境から接続することが可能となります。</p><ul><li><p><a href="https://learn.microsoft.com/ja-jp/azure/logic-apps/deploy-single-tenant-logic-apps-private-storage-account#deploy-using-azure-portal-or-visual-studio-code">Azure portal または Visual Studio Code を使用してデプロイする</a></p></li><li><p><a href="https://learn.microsoft.com/ja-jp/azure/storage/common/storage-private-endpoints">Azure Storage のプライベート エンドポイントを使用する</a></p></li></ul><h2 id="ARM-テンプレートの編集"><a href="#ARM-テンプレートの編集" class="headerlink" title="ARM テンプレートの編集"></a>ARM テンプレートの編集</h2><p>本手順では、以下の通り ARM テンプレートを作成いたします。<br>・Parameters.json<br>・DeployResources.json</p><p>Parameters.json についてはお客様環境に併せて変更を加えていただく必要がございますが、DeployResources.json については特に変更は不要でございます。</p><p>＜Parameters.json＞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;$schema&quot;: &quot;https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#&quot;,</span><br><span class="line">    &quot;contentVersion&quot;: &quot;1.0.0.0&quot;,</span><br><span class="line">    &quot;parameters&quot;: &#123;</span><br><span class="line">        &quot;logicAppFEname&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;Standard-LogicAppsTest&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;appInsightName&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;TestAppInsight&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;fileShareName&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;Standard-LogicAppsTest-Share&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;location&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;Central US&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;use32BitWorkerProcess&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;serverFarmId&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;/subscriptions/（お客様のサブスクリプション ID）/resourceGroups/（お客様のリソースグループ）/providers/Microsoft.Web/serverfarms/（お客様の App Service プラン）&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;contentStorageAccountName&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;teststorageaccount&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;vnetName&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;StandardLogicAppsNW&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;subnetName&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;LogicAppsSubnet&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>＜Parameters.json の各設定値＞<br>・logicAppFEname : 作成する Standard Logic Apps 名<br>・appInsightName : Standard Logic Apps が接続する既存の Application Insights 名<br>・fileShareName : 既存のファイル共有名<br>・location : Standard Logic Apps を構築するリージョン<br>・use32BitWorkerProcess : そのままで問題ありません<br>・serverFarmId: 利用する既存の App service プランのリソース ID<br>・contentStorageAccountName : 利用する既存のストレージアカウント名<br>・vnetName : ストレージアカウントおよび Standard Logic Apps が接続する既存の Vnet 名<br>・subnetName : Logic Apps が接続する既存のサブネット名 </p><p>＜DeployResources.json（こちらは変更を加えなくても結構です）＞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;$schema&quot;: &quot;https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#&quot;,</span><br><span class="line">    &quot;contentVersion&quot;: &quot;1.0.0.0&quot;,</span><br><span class="line">    &quot;parameters&quot;: &#123;</span><br><span class="line">        &quot;logicAppFEname&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;fileShareName&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;appInsightName&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;use32BitWorkerProcess&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;Bool&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;location&quot;: &#123;</span><br><span class="line">            &quot;defaultValue&quot;: &quot;[resourceGroup().location]&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;,</span><br><span class="line">            &quot;metadata&quot;: &#123;</span><br><span class="line">                &quot;description&quot;: &quot;Location to deploy resources to.&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;serverFarmId&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;contentStorageAccountName&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;vnetName&quot;: &#123;</span><br><span class="line">            &quot;defaultValue&quot;: &quot;VirtualNetwork&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;,</span><br><span class="line">            &quot;metadata&quot;: &#123;</span><br><span class="line">                &quot;description&quot;: &quot;Name of the VNET that the Function App and Storage account will communicate over.&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;subnetName&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;String&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;resources&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;Microsoft.Web/sites&quot;,</span><br><span class="line">            &quot;apiVersion&quot;: &quot;2018-11-01&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;[parameters(&#x27;logicAppFEname&#x27;)]&quot;,</span><br><span class="line">            &quot;location&quot;: &quot;[parameters(&#x27;location&#x27;)]&quot;,</span><br><span class="line">            &quot;tags&quot;: &#123;&#125;,</span><br><span class="line">            &quot;kind&quot;: &quot;functionapp,workflowapp&quot;,</span><br><span class="line">            &quot;identity&quot;: &#123;</span><br><span class="line">                &quot;type&quot;: &quot;SystemAssigned&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;properties&quot;: &#123;</span><br><span class="line">                &quot;name&quot;: &quot;[parameters(&#x27;logicAppFEname&#x27;)]&quot;,</span><br><span class="line">                &quot;siteConfig&quot;: &#123;</span><br><span class="line">                    &quot;appSettings&quot;: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;FUNCTIONS_EXTENSION_VERSION&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;~3&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;FUNCTIONS_WORKER_RUNTIME&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;node&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;APPINSIGHTS_INSTRUMENTATIONKEY&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;[reference(resourceId(&#x27;Microsoft.Insights/components&#x27;, parameters(&#x27;appInsightName&#x27;)), &#x27;2015-05-01&#x27;).InstrumentationKey]&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;APPLICATIONINSIGHTS_CONNECTION_STRING&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;[reference(resourceId(&#x27;Microsoft.Insights/components&#x27;, parameters(&#x27;appInsightName&#x27;)), &#x27;2015-05-01&#x27;).ConnectionString]&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;AzureWebJobsStorage&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;[concat(&#x27;DefaultEndpointsProtocol=https;AccountName=&#x27;,parameters(&#x27;contentStorageAccountName&#x27;),&#x27;;AccountKey=&#x27;,listKeys(resourceId(&#x27;Microsoft.Storage/storageAccounts&#x27;, parameters(&#x27;contentStorageAccountName&#x27;)), &#x27;2019-06-01&#x27;).keys[0].value,&#x27;;EndpointSuffix=&#x27;,&#x27;core.windows.net&#x27;)]&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;WEBSITE_CONTENTAZUREFILECONNECTIONSTRING&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;[concat(&#x27;DefaultEndpointsProtocol=https;AccountName=&#x27;,parameters(&#x27;contentStorageAccountName&#x27;),&#x27;;AccountKey=&#x27;,listKeys(resourceId(&#x27;Microsoft.Storage/storageAccounts&#x27;, parameters(&#x27;contentStorageAccountName&#x27;)), &#x27;2019-06-01&#x27;).keys[0].value,&#x27;;EndpointSuffix=&#x27;,&#x27;core.windows.net&#x27;)]&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;WEBSITE_CONTENTSHARE&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;[toLower(parameters(&#x27;fileShareName&#x27;))]&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;APP_KIND&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;workflowApp&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;WEBSITE_VNET_ROUTE_ALL&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;1&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;AzureFunctionsJobHost__extensionBundle__id&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;Microsoft.Azure.Functions.ExtensionBundle.Workflows&quot;,</span><br><span class="line">                            &quot;slotSetting&quot;: false</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;AzureFunctionsJobHost__extensionBundle__version&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;[1.*, 2.0.0)&quot;,</span><br><span class="line">                            &quot;slotSetting&quot;: false</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;name&quot;: &quot;WEBSITE_CONTENTOVERVNET&quot;,</span><br><span class="line">                            &quot;value&quot;: &quot;1&quot;,</span><br><span class="line">                            &quot;slotSetting&quot;: false</span><br><span class="line">                        &#125;</span><br><span class="line">                    ],</span><br><span class="line">                    &quot;use32BitWorkerProcess&quot;: &quot;[parameters(&#x27;use32BitWorkerProcess&#x27;)]&quot;,</span><br><span class="line">                    &quot;cors&quot;: &#123;</span><br><span class="line">                        &quot;allowedOrigins&quot;: [</span><br><span class="line">                            &quot;https://afd.hosting.portal.azure.net&quot;,</span><br><span class="line">                            &quot;https://afd.hosting-ms.portal.azure.net&quot;,</span><br><span class="line">                            &quot;https://hosting.portal.azure.net&quot;,</span><br><span class="line">                            &quot;https://ms.hosting.portal.azure.net&quot;,</span><br><span class="line">                            &quot;https://ema-ms.hosting.portal.azure.net&quot;,</span><br><span class="line">                            &quot;https://ema.hosting.portal.azure.net&quot;,</span><br><span class="line">                            &quot;https://ema.hosting.portal.azure.net&quot;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;serverFarmId&quot;: &quot;[parameters(&#x27;serverFarmId&#x27;)]&quot;,</span><br><span class="line">                &quot;clientAffinityEnabled&quot;: true</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;resources&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;type&quot;: &quot;networkconfig&quot;,</span><br><span class="line">                    &quot;apiVersion&quot;: &quot;2018-11-01&quot;,</span><br><span class="line">                    &quot;name&quot;: &quot;virtualNetwork&quot;,</span><br><span class="line">                    &quot;location&quot;: &quot;[parameters(&#x27;location&#x27;)]&quot;,</span><br><span class="line">                    &quot;dependsOn&quot;: [</span><br><span class="line">                        &quot;[parameters(&#x27;logicAppFEname&#x27;)]&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    &quot;properties&quot;: &#123;</span><br><span class="line">                        &quot;subnetResourceId&quot;: &quot;[resourceId(&#x27;Microsoft.Network/virtualNetworks/subnets&#x27;,parameters(&#x27;vnetName&#x27;), parameters(&#x27;subnetName&#x27;))]&quot;,</span><br><span class="line">                        &quot;swiftSupported&quot;: true</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CORS の設定につきましては、特に必須の設定ではございませんので、変更しなくてもデプロイ可能です。お客様のご要件に合わせまして適宜ご変更ください。</p><p>上記ファイルを作成いただきましたら、任意のフォルダにファイルを格納し、以下のようにコマンドを実行いただきます。</p><p>・ARM テンプレート デプロイ サンプルコマンド</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New-AzResourceGroupDeployment -Name DeployTest01 -ResourceGroupName kymiwaTestLogicApps2 -TemplateFile .\DeployResources.json -TemplateParameterFile .\Parameters.json</span><br></pre></td></tr></table></figure><p>New-AzResourceGroupDeployment コマンドの詳細については以下の公開情報に記載がございますので、併せてご確認いただければと存じます。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/powershell/module/az.resources/new-azresourcegroupdeployment?view=azps-8.3.0">New-AzResourceGroupDeployment</a></li></ul><p>コマンド実行後、以下のように ProvisioningState が “Succeeded” になっていることが確認できれば成功となります。<br><img src="/blog/LogicApps/SecBlobStandardLA/image000.png"> </p><p>Azure Portal でも Standard Logic Apps が作成されていることを確認いただけます。<br><img src="/blog/LogicApps/SecBlobStandardLA/image001.png"> </p><p>以上の手順にて、ファイアウォール設定配下の既存ストレージ アカウントに Standard Logic Apps を作成することが可能でございます。<br>なお、上記のテンプレートについてはあくまでも本記事におけるサンプルとなります。<br>商用環境でご利用いただく場合につきましては、お客様の責任において十分に設計および検証をいただいたうえで採用要否について判断をいただければと存じます。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内いたしましたが、ご理解いただけましたでしょうか。</p><ul><li>事前準備</li><li>ARM テンプレートの編集</li></ul><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p><p>&lt;Azure Logic Apps の参考サイト&gt;<br>– 概要 - Azure Logic Apps とは<br><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview">https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview</a><br>Azure Logic Apps とは、ロジック アプリ デザイナーでフロー チャートを用いて作成したワークフローを自動実行するソリューションです。<br>Azure Logic Apps では、条件分岐などを実装することができ、ワークフローの実行状況に応じて実行する処理を分岐することが可能です。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは！Azure Integration サポート チームの 川合 です。&lt;br&gt;Standard Logic Apps （シングルテナント） を作成するにはストレージ アカウントを利用する必要がございます。&lt;br&gt;しかし、ファイアウォールで通信制御を行ったストレージ アカウント配下には Azure Portal から Standard Logic Apps を構築することが出来ません。&lt;br&gt;今回は ARM テンプレートを用いて ファイアウォール設定を有効にした既存のストレージ アカウント配下に Standard Logic Apps を構築する方法についてご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Standard Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Standard-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>Azure Integration チームについて</title>
    <link href="https://jpazinteg.github.io/blog/general/Integration-teamInfo/"/>
    <id>https://jpazinteg.github.io/blog/general/Integration-teamInfo/</id>
    <published>2022-09-29T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.239Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Integration サポート チームの髙橋です。<br>今日は、私たちのチームがどのように働いているのか、少しでも皆さんにイメージしていただき、興味をもっていただけるよう、普段の働き方や仕事環境、仕事のやりがい等について紹介いたします。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li><a href="#%E4%BB%95%E4%BA%8B%E3%81%AE%E6%B5%81%E3%82%8C">仕事の流れ</a></li><li><a href="#%E3%83%87%E3%82%B9%E3%82%AF-%E3%83%84%E3%82%A2%E3%83%BC%EF%BC%81">デスク ツアー！</a></li><li><a href="#%E4%BB%95%E4%BA%8B%E3%81%AE%E3%82%84%E3%82%8A%E3%81%8C%E3%81%84">仕事のやりがい</a></li><li><a href="#%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88-%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%A0%E3%81%8B%E3%82%89%E3%81%93%E3%81%9D%E5%90%91%E4%B8%8A%E3%81%97%E3%81%9F%E3%82%B9%E3%82%AD%E3%83%AB">サポート エンジニアだからこそ向上したスキル</a></li><li><a href="#%E8%87%AA%E5%8B%95%E5%8C%96%E3%81%AE%E7%B4%B9%E4%BB%8B">自動化の紹介</a></li></ul><h2 id="仕事の流れ"><a href="#仕事の流れ" class="headerlink" title="仕事の流れ"></a>仕事の流れ</h2><p>Microsoft のサポート エンジニアはお客様から起票いただいたサポート リクエストを通してお客様の抱える問題を解決するための技術支援を行います。<br>案件の受付からクローズまで基本的には担当するメンバーがオーナーシップを持って対応します。<br>基本的な案件対応の流れとしては、<strong>案件の受付 → 調査方針の決定 → 発生している問題の調査 → 回答、事象の解消を確認 → クローズ</strong>、です。<br>案件の受付から、概ね 14 日程度でクローズとなります。<br>各エンジニアは 10 ~ 20 件ほどの案件を担当として受け持ち、また同時並行で案件対応を進めていきます。</p><p>このように記載すると 1 つの案件を最初から最後まで自分ひとりで対応しなければいけないように感じるかもしれません。<br>しかし、実際には同じチームのメンバーや、その他の Azure サポート チームのメンバーと非常に密に連携しながら調査を進めています。<br>クラウド サービスでは、新しい機能の追加や機能の改修が日常的に行われており、もはや一人のスーパー エンジニアが何でも知っている、という時代ではなくなっています。<br>言い換えれば、新しい機能や未知の問題に直面したとき、あなたがその問題の第一人者です。<br>このような状況から、各案件でオーナーシップをとる担当者がいるものの、実際には色々なメンバーと支援をし合いながら調査を行っています。</p><p>次に、Azure Integration チームのサポート エンジニアのとある 1 日について紹介いたします！</p><h3 id="とある-1-日の流れ"><a href="#とある-1-日の流れ" class="headerlink" title="とある 1 日の流れ"></a>とある 1 日の流れ</h3><p><strong>9:00 - サポート窓口が開きます。</strong><br>業務を開始！まずはメール チェックし、今日一日のタスクの洗い出し。</p><hr><p><strong>9:30 - チームの朝会に参加します！</strong><br>チーム全体への共有事項の展開や、サポート案件対応で困ったポイントを相談します。</p><hr><p><strong>10:00 - 新規案件対応。</strong><br>その日に新しくお問い合わせいただいた案件について、お客様へ電話をして対応方針を相談したり、メールで回答を送付します。<br>日によってまちまちですが、大体一人に対して一日 1 ～ 2 件程度、新規にアサインされます。</p><hr><p><strong>12:30 - お昼休憩！</strong><br>前日の夕飯の残り物を食べながら、休憩します。</p><hr><p><strong>13:30 - 海外ミーティングに参加します！</strong><br>Azure Integration チームでは、海外エンジニアが開催している会議にも参加しています。<br>海外での事例も大変勉強になります。<br>英語での会話が難しい場合には、チャットで質問することも可能です。</p><hr><p><strong>14:30 - 案件調査を行います。</strong><br>気合を入れて、時間のかかる調査 (ログの解析、再現検証) を行います。<br>検証で分からないことがあれば、チーム チャットで気軽に相談できます。<br>チーム チャットでは技術的なことはもちろんですが、社内の運用で分からないことでもチーム メンバーが熱心に回答してくれます。</p><hr><p><strong>16:00 - ミーティングに参加します！</strong><br>Azure Integration チームでは、各自が対応しているケースについて相談する時間を毎日 30 分程度設けています。<br>自分一人だけで悩むのではなく、チームが一丸となってお客様の問題解消に努めます。<br>また、他のメンバーの対応内容を知ることで、自身の知見も深まります。</p><hr><p><strong>16:30 - 調査を再開します！</strong><br>サポート窓口が閉まる 17:30 までにお客様へ調査結果を報告できるようラスト スパート！<br>必要に応じて海外エンジニアや、他の Azure 製品の担当エンジニアに連絡をして、協力して調査していくこともあります。</p><hr><p><strong>17:30 - サポート窓口が閉まります。</strong><br>気が済むまで、翌日報告予定の案件の調査や、他メンバーの案件の内容を勉強します。</p><h2 id="デスク-ツアー！"><a href="#デスク-ツアー！" class="headerlink" title="デスク ツアー！"></a>デスク ツアー！</h2><p>Monitoring &amp; Integration チームのメンバーのデスクの様子をご紹介いたします！<br>実際のメンバーのデスクですので、こちらからメンバーがどのような環境で働いているのか参考になれば嬉しいです！</p><ul><li><p><em>おしゃれ &amp; 実用性のデスク！</em><br><img src="/blog/general/Integration-teamInfo/Desk_sooch.png"></p></li><li><p><em>こだわりのキーボードやディスプレイに囲まれて業務効率 UP！</em><br><img src="/blog/general/Integration-teamInfo/Desk_takafumiohta.png"></p></li><li><p><em>Simple is the best !</em><br><img src="/blog/general/Integration-teamInfo/Desk_shhanai.png"></p></li><li><p><em>引っ越して完璧な環境を整えました！</em><br><img src="/blog/general/Integration-teamInfo/Desk_masatokawai.png"></p></li></ul><h2 id="仕事のやりがい"><a href="#仕事のやりがい" class="headerlink" title="仕事のやりがい"></a>仕事のやりがい</h2><p>Azure Integration チームのメンバーに、サポート エンジニアのやりがいについて聞いてみました。</p><ul><li>お客様のお困りごとを解消でき、お客様から感謝のお言葉をいただけたとき、サポートを続けていてよかったと思います。</li><li>Microsoft 製品全般の知識を幅広く習得できるのが嬉しいです。入社時は何を書いているかさっぱり分からなかった技術情報のページが、スラスラと読めるようになったという経験が数多くあります。技術漬けの毎日ですが、誰かエキスパートに頼るもよし、自身で検証を頑張ってみるもよし、WLB を考えて選択も可能です。</li><li>お客様と直接電話して一緒に解決するためのソリューションを考えて、実際に解決出来た際に感謝されることがすごく嬉しい瞬間です。</li><li>サポートとしてもわからない問題に直面した時、お客様と一緒に考え、お客様の状況下で利用可能な解決策を見つける時にやりがいを感じました。</li><li>お客様の環境で発生しているトラブルの原因調査および解決が出来たときにやりがいを感じます。</li><li>お客様のやりたいことを整理して解決できた際にやりがいを感じます。</li><li>非常に難しい課題についてチームだけでなく国内外のメンバーと協力し、一つの答えに行きついた時に頑張ってよかったなと感じます。</li><li>Logic Apps はまだまだ新しい製品なのですが、お客様からお問い合わせの数が徐々に増えていて、広くご利用いただけ始めている実感があります。</li><li>お客様から「ありがとうございます、助かりました！」と一言をいただけるだけで次も頑張ろうと思えるので、お客様の問題に対して積極的に取り組んでいくようにしています。</li><li>チームとの協力体制　(チームに助けてもらえると嬉しい、かつ、頑張らなきゃという気持ちになります。自分がお手伝いできた時も嬉しいです !)</li></ul><h2 id="サポート-エンジニアだからこそ向上したスキル"><a href="#サポート-エンジニアだからこそ向上したスキル" class="headerlink" title="サポート エンジニアだからこそ向上したスキル"></a>サポート エンジニアだからこそ向上したスキル</h2><p>特定の技術力に偏ってしまうのでは？と思う方もいらっしゃるかと思いますが、他製品の知識やコミュニケーション能力等、とても幅広いスキルが身に付きます！</p><ul><li>お客様とのゴール設定 / 複数製品をまたがるお問い合わせでのスコーピング / 他製品のサポートと連携するうえでのコミュニケーションスキル / Microsoft 製品全般の知識が身に付きます。</li><li>Azure の技術力はもちろん向上しましたが、日々お客様から頂くお問い合わせに対してどのように進めればベストなパフォーマンスが発揮出来るかどうか、自分の中で色々調整するスキルが向上しました。</li><li>状況を冷静に考え、アクション レベルでやるべきことをリストアップできる (状況整理できる) スキルが身に付きました。</li><li>お客様が何に困っているか考え、お客様に寄り添う力が向上したと感じています。</li><li>一日に何件もお問い合わせがあるため、色々な問題がその日その時に発生しているのですが、問い合わせの文面も様々で、お客様によっては何に困っているかを即座に判断できない場合があります。<br>その際は積極的にヒアリングし、時にはリモートで打ち合わせを行い直接画面を見ながら対話をすることで、本当に何にお困りかを確認しながら取り組むようにしています。</li><li>技術力ももちろんですが、コミュニケーション能力が伸びたと感じます。お客様とのやりとりに加えて、国内外のメンバーとも頻繁に連携することがあるためです。</li><li>必要な情報を迅速に見つける能力 (日本語・英語の技術的な資料をざっくりと読み進め、必要な情報を探していく)</li></ul><h2 id="自動化の紹介"><a href="#自動化の紹介" class="headerlink" title="自動化の紹介"></a>自動化の紹介</h2><p>Integration 製品の Logic Apps では、色々な製品同士を統合して処理の自動化を行います。<br>Azure Integration チームでは、「自動化」を実生活に取り入れているメンバーが多くいますので、実例をご紹介いたします。</p><ul><li>過去に スマート リモコンを使ってワンボタンでエアコンからサーキュレーター、電気のオン・オフを実現してました。</li><li>VS Code で調査によく利用する PowerShell コマンド、クエリをまとめていて、必要な時にすぐ出せるようにしています。</li><li>朝 7:30 朝起きたらスマート スピーカーで部屋の電気とテレビを付けて起床モードにして身体を起こすようにしています。</li><li>スマートフォンのオートメーションの機能で22時以降に翌日のアラームを設定するようにしたりと、細かい所で自動化に取り組んでいます。</li><li>メールの振り分け (重要なメールを見落とさないように !)</li><li>通知が来る時間の指定 (仕事とプライベートの時間はしっかり分ける)</li></ul><p>社内でのツールでも Logic Apps を使って、業務の効率化を図っています。</p><ul><li>他チームからの相談が来たら Teams でその日の当番の方をメンションするツールを Logic Apps で稼働させています。</li><li>新しいお問い合わせが来たら Teams で自分をメンションするツールを稼働させています。</li></ul><p>以上、Azure Integration  チーム紹介 Blog でした。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。Azure Integration サポート チームの髙橋です。&lt;br&gt;今日は、私たちのチームがどのように働いているのか、少しでも皆さんにイメージしていただき、興味をもっていただけるよう、普段の働き方や仕事環境、仕事のやりがい等について紹介いたします。&lt;/p&gt;</summary>
    
    
    
    
    <category term="General" scheme="https://jpazinteg.github.io/blog/tags/General/"/>
    
    <category term="チーム紹介" scheme="https://jpazinteg.github.io/blog/tags/%E3%83%81%E3%83%BC%E3%83%A0%E7%B4%B9%E4%BB%8B/"/>
    
  </entry>
  
  <entry>
    <title>Azure Logic Apps で JSON オブジェクトから特定のプロパティの値を取得する方法</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/how-to-treat-json-in-logicApps/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/how-to-treat-json-in-logicApps/</id>
    <published>2022-09-06T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.231Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Integration サポート チームの 花井 です。<br>本記事では Azure Logic Apps で JSON オブジェクトの特定のプロパティから値を取得する方法についてご説明します。</p><h2 id="こんな方におすすめです"><a href="#こんな方におすすめです" class="headerlink" title="こんな方におすすめです"></a>こんな方におすすめです</h2><ul><li>動的なコンテンツとして表示されないプロパティの値を取得されたい</li><li>JSON の解析アクションを実行せず特定のプロパティの値を取得されたい</li></ul><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>本記事では従量課金版 Logic Apps ワークフローを使用しますが、Standard Logic Apps、Power Automate のワークフローでも同様に動作します。</li><li>どのトリガーを使用しても問題ございません。</li><li>以下の JSON オブジェクトを格納した変数 obj を初期化するアクションを配置した Logic Apps ワークフローを用意します。<br>※事前準備の項目で詳細をご案内します。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;msgList&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good morming.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;morning&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Hello.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;always&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good night.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;when you sleep&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good evening.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;evening&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>本記事の例では、上記の JSON オブジェクトが格納された変数 obj から、msgList プロパティ (配列) の 1 番目の要素の msg プロパティの値 “Hello.” を取得する関数をご案内します。</li></ul><h2 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h2><p>以下のように変数初期化アクションを追加し、変数 obj を定義します。<br><img src="/blog/LogicApps/how-to-treat-json-in-logicApps/image01.png"></p><ul><li>各パラメーターの設定<br>名前 : obj<br>種類 : オブジェクト<br>値 : (以下の JSON を入力します)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;msgList&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good morming.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;morning&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Hello.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;always&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good night.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;when you sleep&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good evening.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;evening&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="構築"><a href="#構築" class="headerlink" title="構築"></a>構築</h2><ol><li><p>変数初期化アクションの次のステップとして、作成アクションを追加します。<br><img src="/blog/LogicApps/how-to-treat-json-in-logicApps/image02.png"></p></li><li><p>作成アクションの [入力] パラメーターに以下の関数を入力します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variables(&#x27;obj&#x27;)[&#x27;msgList&#x27;][1][&#x27;msg&#x27;]</span><br></pre></td></tr></table></figure><p><img src="/blog/LogicApps/how-to-treat-json-in-logicApps/image03.png"></p></li><li><p>ワークフローを保存します。</p></li></ol><h2 id="確認"><a href="#確認" class="headerlink" title="確認"></a>確認</h2><ol><li>Azure ポータル上で、Logic Apps の概要ページの [トリガーの実行 - 実行] を選択し、トリガーを手動実行します。</li><li>Azure ポータル上で、Logic Apps の概要ページの [実行の履歴] タブから、手動実行した実行のアクションの実行履歴を開きます。</li><li>作成アクションの未加工入力から正常に値 “Hello.” が取得できていることを確認できます。<br><img src="/blog/LogicApps/how-to-treat-json-in-logicApps/image04.png"></li></ol><h2 id="入力した関数の解説"><a href="#入力した関数の解説" class="headerlink" title="入力した関数の解説"></a>入力した関数の解説</h2><p>variables 関数は、指定した変数の値を取得する関数です。<br>関数「variables(‘obj’)」の場合は変数 obj の値を取得する動作となる、以下の JSON オブジェクト型の値を取得します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;msgList&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good morming.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;morning&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Hello.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;always&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good night.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;when you sleep&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;msg&quot;: &quot;Good evening.&quot;,</span><br><span class="line">      &quot;time&quot;: &quot;evening&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Logic Apps では JSON オブジェクトを取得する関数の末尾に以下の記述のいずれかを追加することで指定したプロパティの値を取得できます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 ?[&#x27;プロパティ名&#x27;] </span><br><span class="line">// 1 の記述では ? を付加することで Null 許容となり指定したプロパティが存在しない場合もエラーとなりません。</span><br><span class="line">2 [&#x27;プロパティ名&#x27;]</span><br><span class="line">3 .プロパティ名</span><br><span class="line">// 半角スペースを含むプロパティ名では 3 の記述はご利用いただけません。</span><br></pre></td></tr></table></figure><p>関数「variables(‘obj’)[‘msgList’]」では以下の配列 (アレイ) 型の値を取得します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;Good morming.&quot;,</span><br><span class="line">    &quot;time&quot;: &quot;morning&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;Hello.&quot;,</span><br><span class="line">    &quot;time&quot;: &quot;always&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;Good night.&quot;,</span><br><span class="line">    &quot;time&quot;: &quot;when you sleep&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;Good evening.&quot;,</span><br><span class="line">    &quot;time&quot;: &quot;evening&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Logic Apps では JSON 配列 (アレイ) 型を取得する関数の末尾に以下のような記述を追加することで指定した要素番号の要素の値を取得できます。<br>なお要素番号は 0 からカウントします。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[要素番号]</span><br></pre></td></tr></table></figure><p>関数「variables(‘obj’)[‘msgList’][1]」では以下の JSON オブジェクト型の値を取得します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;msg&quot;: &quot;Hello.&quot;,</span><br><span class="line">  &quot;time&quot;: &quot;always&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>作成アクションに入力した関数「variables(‘obj’)[‘msgList’][1][‘msg’]」では、上記のオブジェクトの msg プロパティを取得する動作であり、値 “Hello.” を取得します。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内しましたが、いかがでしたでしょうか。</p><ul><li>JSON オブジェクトから指定したプロパティの値を取得する方法</li><li>配列の特定の要素から値を取得する方法</li></ul><p>本記事ではオブジェクト型の変数からプロパティを指定し値を取得しましたが、triggerBody 関数や body 関数を組み合わせ、アクションやトリガーの出力の body プロパティに格納されたオブジェクトから指定したプロパティの値を取得することも可能でございます。</p><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。Azure Integration サポート チームの 花井 です。&lt;br&gt;本記事では Azure Logic Apps で JSON オブジェクトの特定のプロパティから値を取得する方法についてご説明します。&lt;/p&gt;
&lt;h2 id=&quot;こんな方におすすめです&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>HTTP アクションでのタイムアウト エラーの回避方法 - 非同期ポーリング パターン</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/HttpAction-AsyncPattern-Polling/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/HttpAction-AsyncPattern-Polling/</id>
    <published>2022-09-01T01:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.191Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。 Azure Integration サポート チームの大田です。<br>Logic Apps の HTTP アクションから長時間の処理を伴うサービスをリクエストする場合、下図のようにタイムアウト エラーを生じます。</p><p><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/timeout-error.png"></p><p>本エラーは下記の公開情報にございます HTTP 要求のタイムアウト期間に関する制限が原因となります。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-limits-and-config?tabs=azure-portal#http-request-limits">HTTP 要求のタイムアウト期間に関する制限</a></li></ul><p>本記事では非同期ポーリング パターンを用いて HTTP アクションのタイムアウト エラーを回避する方法をサンプルを用いてご紹介します。</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul><li>今回の記事では従量課金版ロジック アプリを利用しますが、スタンダード版のロジック アプリでも問題ありません。</li></ul><h2 id="サンプルによる解説の流れ"><a href="#サンプルによる解説の流れ" class="headerlink" title="サンプルによる解説の流れ"></a>サンプルによる解説の流れ</h2><p>本記事では、最終的に非同期ポーリング パターンにより HTTP アクションのタイムアウト エラーを回避するサンプルを構築いたします。</p><p>まずは タイムアウト エラーを生じる状況を再現するサンプルを構築いたします。<br>その後、サンプルを改修し非同期ポーリング パターンによってタイムアウト エラーが解消されることを確認いたします。</p><h3 id="1-タイムアウト-エラーが生じる状況の再現"><a href="#1-タイムアウト-エラーが生じる状況の再現" class="headerlink" title="1. タイムアウト エラーが生じる状況の再現"></a>1. タイムアウト エラーが生じる状況の再現</h3><p>タイムアウト エラーを生じる状況をクライアント側とサーバー側の 2 つのロジック アプリによって再現いたします。</p><h4 id="1-1-サーバー側ロジック-アプリの構築"><a href="#1-1-サーバー側ロジック-アプリの構築" class="headerlink" title="1-1. サーバー側ロジック アプリの構築"></a>1-1. サーバー側ロジック アプリの構築</h4><p>サーバー側のロジック アプリ（<strong>SampleServerSide</strong>）を、Azure portal から作成します。</p><blockquote><p>今回の記事では従量課金版ロジック アプリを利用しております。</p></blockquote><p><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-1.png"></p><p>ロジックアプリ作成後にテンプレートから <strong>HTTP 要求の受信時</strong> を選択します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-2.png"></p><p>HTTP 要求の受信時 トリガーの <strong>Add new parameter</strong> から <strong>メソッド</strong> を選択します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-6.png"></p><p><strong>メソッド</strong> を <strong>GET</strong> に設定します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-7.png"></p><p>作成されたテンプレートに<strong>応答アクション</strong>を追加して、ワークフローを保存します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-3.png"></p><p>ワークフローを保存すると、本ロジック アプリへの HTTP アクセス用 URL が発行されます。<br>本 URL はクライアント側の設定で使用するのでメモをしておいてください。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-4.png"></p><p>この URL にアクセスすることで、本ロジック アプリに設定したワークフローが実行されます。<br>タイムアウト エラーを起こすために、<strong>応答アクション</strong> の前に 3 分の <strong>待ち時間アクション</strong> を追加して保存します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server1-5.png"><br>長時間の処理を疑似的に待ち時間アクションで再現したような状態となります。</p><p>本章における、サーバー側ロジック アプリの設定は以上となります。</p><h4 id="1-2-クライアント側ロジック-アプリの構築"><a href="#1-2-クライアント側ロジック-アプリの構築" class="headerlink" title="1-2. クライアント側ロジック アプリの構築"></a>1-2. クライアント側ロジック アプリの構築</h4><p>サーバー側のロジック アプリと同様に、クライアント側のロジック アプリ（<strong>SampleClientSide</strong>）を Azure portal から作成します。</p><blockquote><p>今回の記事では従量課金版ロジック アプリを利用しております。</p></blockquote><p>ロジックアプリ作成後にテンプレートから <strong>繰り返し</strong> を選択します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client1-1.png"></p><p><strong>繰り返し（Recurrence）トリガー</strong> の頻度を <strong>3 ヶ月</strong> に設定してワークフローを保存します。<br>クライアント側ロジック アプリが短い間隔で自動起動しないように長期間の間隔を設定しております。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client1-2.png"></p><p><strong>HTTP アクション</strong> を下記の設定で追加します。</p><ul><li>方法 : GET</li><li>URI : サーバー側ロジック アプリの URI（メモしたものを貼付）<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client1-3.png"></li></ul><p><strong>HTTP アクション</strong> の右上メニューから設定を開きます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client1-4.png"></p><p><strong>再試行 ポリシー</strong> を <strong>なし</strong> に設定して <strong>完了</strong> を押下します。<br>本設定は効率的にサンプルの検証を行う目的で設定しております。<br>本設定によりタイムアウト エラー後の HTTP アクションの再試行が抑制されます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client1-5.png"></p><p>上記の設定完了後にワークフローを保存します。</p><p>本章における、クライアント側ロジック アプリの設定は以上となります。</p><h4 id="1-3-サンプルの実行"><a href="#1-3-サンプルの実行" class="headerlink" title="1-3. サンプルの実行"></a>1-3. サンプルの実行</h4><p>現時点のサンプルを実行し、タイムアウト エラーが発生する事を確認します。</p><p>クライアント側のロジック アプリの概要からトリガーの実行を行います。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec1-1.png"></p><p><strong>実行の履歴</strong> タブから約 2 分の経過後に実行が失敗する事を確認できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec1-2.png"></p><p>上図の失敗した実行を押下すると、失敗した実行の履歴を閲覧可能です。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec1-3.png"></p><p>失敗したアクションの右上には赤色のアイコンでその旨がマークされます。<br><strong>HTTP アクション</strong> を押下して詳細を確認するとタイムアウト エラーにて失敗した旨が表示されます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec1-4.png"></p><p>本エラーは下図（公開情報の抜粋）のマルチテナントの送信要求に関するタイムアウト期間制限のためとなります。<br>上図の通り、HTTP アクションが 2 分間を超える処理のリクエストにより失敗したことを確認可能です。<br>なお、マルチテナントとは従量課金ロジック アプリの事を表します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec1-5.png"></p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-limits-and-config?tabs=azure-portal#http-request-limits">HTTP 要求のタイムアウト期間に関する制限</a></li></ul><p>次に、サーバー側ロジック アプリの実行履歴を同様に確認します。<br>サーバー側ロジック アプリの <strong>概要</strong> メニューから <strong>実行の履歴</strong> タブを選択いたします。<br>実行が約 3 分の経過後に実行が失敗している事を確認できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec1-6.png"></p><p>本エラーはクライアント側のタイムアウト エラーにより接続が閉じているために応答ができず生じたエラーとなります。</p><p>本章までの設定により、HTTP アクションがタイムアウト エラーにより失敗する状態を構築できました。<br>次章以降で、非同期ポーリング パターンによってタイムアウト エラーを解消するようにサンプルを改善していきます。</p><h3 id="2-非同期ポーリング-パターンによる-タイムアウト-エラーの解消"><a href="#2-非同期ポーリング-パターンによる-タイムアウト-エラーの解消" class="headerlink" title="2. 非同期ポーリング パターンによる タイムアウト エラーの解消"></a>2. 非同期ポーリング パターンによる タイムアウト エラーの解消</h3><p>本章では、Logic Apps の HTTP アクションにおける非同期ポーリング パターンの概念を簡単に説明した後に、前章までで構築したロジック アプリのタイムアウト エラーを解消するようにサンプルを改善していきます。</p><h4 id="2-1-非同期ポーリング-パターンの概要"><a href="#2-1-非同期ポーリング-パターンの概要" class="headerlink" title="2-1. 非同期ポーリング パターンの概要"></a>2-1. 非同期ポーリング パターンの概要</h4><p>Logic Apps の HTTP アクションにおける非同期ポーリング パターンはサーバー側の処理状況をクライアント側が定期的に確認するパターンとなります。<br>サーバーが処理中であれば一定時間の経過後に再度サーバーの状況を確認し、サーバーの処理が完了していればワークフローの後続のアクションを実行する動きとなります。</p><p>HTTP アクションはサーバーの処理状況をレスポンスのステータス コードによって判断します。<br>ステータス コードが 202 番であれば処理中と判断し、一定時間の経過後に再度サーバーの状態を確認します。<br>また、ステータス コードが 200 番であれば処理が完了したと判断し、ワークフローの後続アクションを実行いたします。</p><p>処理状況の確認先や処理状況の確認間隔などの制御はレスポンス ヘッダーにより行います。<br>サーバーは処理状況の確認先 URI を Location ヘッダーに設定し、確認間隔を Retry-after ヘッダーに設定することでクライアントにポーリング処理の動作を指示します。</p><p>下図は公開ドキュメントから抜粋した非同期ポーリング パターンの概念図となります。<br>上記で説明した内容の図示となります。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/async-polling-pattern.png"></p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-create-api-app#perform-long-running-tasks-with-the-polling-action-pattern">非同期ポーリング パターンで長時間タスクを実行する</a></li></ul><p>非同期ポーリング パターンの実現に当たってはサーバーの処理状態を保存しておく仕組みと、サーバーが処理状態に応じてレスポンスを変更する仕組みの構築が必要となります。</p><h4 id="2-2-サーバー側の処理状態の保存先"><a href="#2-2-サーバー側の処理状態の保存先" class="headerlink" title="2-2. サーバー側の処理状態の保存先"></a>2-2. サーバー側の処理状態の保存先</h4><p>まずは、サーバー側の処理状態を保持する仕組みを構築いたします。<br>今回は処理状態の保存先としてストレージ アカウントを使用いたします。</p><p>ストレージ アカウントを Azure portal から作成します。<br>本記事では、<strong>testdata1234</strong> という名称のストレージ アカウントを作成いたします。<br>ストレージ アカウント名は重複して作成できませんので、任意の名前をお使いください。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/storage2-1.png"></p><p>ストレージ アカウントのメニューからコンテナーを作成いたします。<br>本記事では、<strong>logic-apps</strong> という名前でサンプル用のコンテナを作成いたします。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/storage2-2.png"></p><p>ロジック アプリからストレージ アカウントへ接続するための情報を取得します。<br>ストレージ アカウントの <strong>アクセス キー</strong> メニューから <strong>キー</strong> と <strong>接続文字列</strong> のペアをメモしておきます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/storage2-3.png"></p><h4 id="2-3-クライアント側ロジック-アプリの改修"><a href="#2-3-クライアント側ロジック-アプリの改修" class="headerlink" title="2-3. クライアント側ロジック アプリの改修"></a>2-3. クライアント側ロジック アプリの改修</h4><p>クライアント側のロジック アプリを非同期ポーリング パターンに対応するように改修していきます。</p><p>HTTP アクションは非同期処理オプションが有効であれば、特別な設定をしなくても非同期ポーリング パターンに従って動作いたします。<br>非同期処理オプションはデフォルトで有効となっておりますが下記の手順によりご確認可能です。<br>HTTP アクションの設定を開いていただきます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client2-3.png"><br>設定項目の非同期パターンが有効になっていることをご確認いただきます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client2-4.png"></p><p>先述の通りレスポンスのステータス コードが 202 番であれば、HTTP アクションは一定時間の経過後に再度サーバーの処理状況を確認いたします。<br>具体的にはレスポンスの Retry-after ヘッダーに設定の時間が経過した後に Location ヘッダーに設定の URI 宛てに再度 HTTP リクエストを送信します。</p><p>つまり、クライアント側ロジック アプリの HTTP アクションに関する追加の改修は不要で、サーバー側で適切な情報をレスポンスとして設定すれば非同期ポーリング パターンによるタイムアウト エラーの回避を行えます。</p><p>また、HTTP アクションのレスポンスが 200 番となった場合にワークフローの後続処理が実施されるため確認用のアクションを下図のように設定いたします。<br>本アクションにより、HTTP アクションのレスポンスが 200 番だった場合の Body の内容を確認可能となります。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/client2-5.png"></p><p>以上で、クライアント側ロジック アプリの改修は完了となります。</p><h4 id="2-4-サーバー側ロジック-アプリの改修-処理状況の保存"><a href="#2-4-サーバー側ロジック-アプリの改修-処理状況の保存" class="headerlink" title="2-4. サーバー側ロジック アプリの改修 - 処理状況の保存"></a>2-4. サーバー側ロジック アプリの改修 - 処理状況の保存</h4><p>次に、サーバー側のロジック アプリを改修していきます。<br>改修内容はサーバー処理状況を保存する仕組みならびに処理状況に応じてレスポンスを変更する仕組みの構築となります。</p><p>本小節では、サーバーの処理状況を保存できるようにワークフローの改修を行います。</p><p>一般的にサーバーへのリクエストは並列に行われるため、リクエスト毎に実行状態を管理する必要がございます。<br>本記事ではリクエストを特定する識別子としてクライアント側ロジック アプリの実行 ID を用います。</p><p>クライアント側ロジック アプリの実行 ID はリクエスト ヘッダーより取得可能です。<br>下図のように文字列変数 <strong>id</strong> にクライアント側ロジック アプリの実行 ID を格納いたします。<br>値に <strong>@{triggerOutputs()[&#39;headers&#39;][&#39;x-ms-workflow-run-id&#39;]}</strong> を設定することで本処理を実現できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-1.png"></p><p>以上の設定により、id 変数を通じてサーバー側ロジック アプリからクライアント側ロジック アプリの実行 ID を利用可能となります。</p><p>次に、取得した ID を利用してサーバー側ロジック アプリの実行状態をストレージ アカウントに保存していきます。<br><strong>変数を初期化する</strong> アクション（ID の取得処理）の後に <strong>BLOB を作成する（V2）</strong> アクションを追加します。</p><p>以前に BLOB ストレージへの接続情報を作成していない場合、Blob ストレージへの接続情報を求められるので下図のように入力し <strong>作成</strong> を押下いたします。</p><ul><li>接続名 : 任意の名前</li><li>認証の種類 : Access Key</li><li>Azure Storage のアカウント名 : 作成したストレージ アカウントの名前</li><li>Azure Storage アカウントのアクセス キー : 前小節でメモしたキー情報<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/storage2-4.png"></li></ul><p>以前に BLOB ストレージへの接続情報を作成している場合でも、<strong>接続を変更してください。</strong> を押下いただければ今回のサンプル用に新規の接続を作成可能です。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/storage2-5.png"></p><p><strong>BLOB を作成する（V2）</strong> アクションのパラメータを下図の用に設定いたします。</p><ul><li>ストレージ アカウント名 : Use connection settings</li><li>フォルダーのパス : /logic-apps/@{variables(&#39;id&#39;)}</li><li>BLOB 名 : status.json</li><li>BLOB コンテンツ : 後述の json データ<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-2.png"></li></ul><p>BLOB コンテンツについては下記の JSON データをそのままコピーしてご使用ください。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;running&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>次に、<strong>待ち時間</strong> アクションの後に <strong>BLOB を作成する（V2）</strong> アクションを追加します。<br>BLOB コンテンツは下記の JSON データをそのままコピーしてご使用いただき、その他のパラメータは上記の <strong>BLOBを作成する（V2）</strong> アクションで設定したパラメータと同様の内容をご設定ください。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;finished&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本設定により、サーバー側の処理状態を <strong>status.json</strong> というファイル上で管理できるようになりました。<br>具体的には 待ち時間アクションの完了までは、json データの status 属性が running、待ち時間アクションの完了後は json データの status 属性が finished となります。</p><p>なお、本ファイルは BLOB ストレージに <strong>/logic-apps/ [クライアント側ロジック アプリの実行 ID] /status.json</strong> というパスで保存されます。<br>そのため、要求毎に実行状態を保持しておくことが可能となります。</p><p>現時点でのワークフローの全体図は下図の通りとなっております。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-6.png"></p><p>現時点でのワーク フローは処理状態に応じたレスポンスの設定が出来ていないため引き続きタイム アウトエラーを生じるものとなります。<br>次小節で本問題を解決いたします。</p><h4 id="2-5-サーバー側ロジック-アプリの改修-処理状態に応じたレスポンス内容の設定"><a href="#2-5-サーバー側ロジック-アプリの改修-処理状態に応じたレスポンス内容の設定" class="headerlink" title="2-5. サーバー側ロジック アプリの改修 - 処理状態に応じたレスポンス内容の設定"></a>2-5. サーバー側ロジック アプリの改修 - 処理状態に応じたレスポンス内容の設定</h4><p>前小節まででサーバー側ロジック アプリの処理状態の保存までを構築いたしました。<br>本小節では、処理状態に応じてレスポンス内容を変更するようにワークフローを改修していきます。</p><p>まず、長時間の実行を伴う処理を行う前にクライアントに処理を受け付けた旨を示す応答を返します。<br>クライアント側ロジック アプリの <strong>待ち時間</strong> アクションの前に下図のような <strong>応答</strong> アクションを追加します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-7.png"></p><p>状態コードに 202 を、Location ヘッダーにサーバー側ロジック アプリの URL を設定いたします。<br>本設定によりクライアント側ロジック アプリからのリクエストを受けた際に、処理を受け付けた旨と処理状況の確認はサーバー側ロジック アプリを再度呼び出すことで確認して欲しい旨を即時に伝えられます。<br>また、Retry-after ヘッダーに 30 を設定しているため、クライアント側ロジック アプリからの処理状況の確認リクエストは 30 秒毎に行われることとなります。</p><p>クライアント側ロジック アプリはレスポンスを受けて、30 秒後に状況確認のためにサーバー側ロジック アプリを呼び出します。<br>現時点のワークフローですと、再度呼び出されたサーバー側ロジック アプリは 202 番応答をした後に待ち時間アクションを行います。<br>この動きは 1 回目のリクエストを受けた際の動きと同様となります。<br>つまり、実行状態を確認するだけのはずがサーバー側に再度処理の依頼を実施してしまっている状況となっております。</p><p>上記を踏まえますと、1 回目のリクエストでは処理を実施し 2 回目以降のリクエストでは処理状態の確認を行うようにワークフローを改修する必要がございます。<br>そのために、処理状況の管理ファイル（<strong>status.json</strong>）の存在有無によって処理を分岐させます。</p><p>下図のように 1 つめの <strong>BLOB を作成する（V2）</strong> アクションの前に <strong>BLOB コンテンツを取得する（V2）</strong> アクションを作成します。<br>BLOB パラメーターに <strong>/logic-apps/@{variables(‘id’)}/status.json</strong> を設定し、<strong>status.json</strong> の取得を試みます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-8.png"></p><p>1 回目のリクエストでは <strong>status.json</strong> が作成されていないため 404 エラーを生じ、2 回目以降のリクエストでは <strong>status.json</strong> が存在するため実行が成功し <strong>status.json</strong> の内容が取得されます。<br>よって、<strong>BLOB コンテンツを取得する（V2）</strong> アクションの実行成否に応じて処理を分岐させることで 1 回目のリクエストと 2 回目以降のリクエストの区別が可能となります。</p><p>1 つめの <strong>BLOB を作成する（V2）</strong> アクションの設定メニューから <strong>実行条件の構成</strong> を押下いたします。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-9.png"></p><p><strong>BLOB　コンテンツを作成する（V2）</strong> アクションが失敗した場合のみにチェックを入れて <strong>完了</strong> ボタンを押下する事で、以降の処理を 1 回目のリクエストのみ実行するような構成となります。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-10.png"></p><p><strong>BLOB　コンテンツを取得する（V2）</strong> の成否によって実行を分岐する都合上、実行が成功しているにも関わらずエラー終了と表示されてしまいます。<br>本事象の回避のために 2 つめの <strong>BLOB　コンテンツを作成する（V2）</strong> アクションの後に <strong>終了</strong> アクションを下図のように追加いたします。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-17.png"></p><p>次に、2 回目以降のリクエストに対する処理、すなわちサーバー処理状態の確認を行う処理を追加いたします。<br><strong>BLOB　コンテンツを取得する（V2）</strong> アクションと <strong>BLOB を作成する（V2）</strong> アクションの間をマウスオーバーすると <strong>＋</strong> ボタンが表示されます。<br>こちらのボタンを押下して並列分岐の追加を選択いただくと分岐が作成されます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-11.png"></p><p>作成された分岐のアクションに <strong>変数を初期化する</strong> アクションを追加し、下図のように設定いたします。<br>値に <strong>@{json(body(&#39;BLOB_コンテンツを取得する_(V2)&#39;))[&#39;status&#39;]}</strong> を設定することで <strong>status.json</strong> の status 属性を保持する文字列変数 <strong>status</strong> が作成されます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-12.png"></p><p>次に、下図のように status 変数が finished という文字列に等しいか否かを判定する <strong>条件</strong> アクションを追加したします。<br>条件部の左辺に <strong>@variables(&#39;status&#39;)</strong> を右辺に <strong>&quot;finished&quot;</strong> を設定し、等しいか否かを判定いたします。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-13.png"></p><p>上記のアクションが True の場合はサーバー側の処理が終わっているため、その旨を返すアクションを追加いたします。<br>True 側の <strong>アクションの追加</strong> を押下し、下図のような <strong>応答</strong> アクションを追加いたします。<br>状態コードに 200 を、本文に処理が終了した旨を示すメッセージを設定いたします。<br>本応答を受けたクライアント側ロジック アプリはポーリング処理を終了し、HTTP アクション以降の処理を行います。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-14.png"></p><p>次に条件分岐が False の場合はサーバー側の処理が終わっていないため、その旨と再度の状況確認の依頼を返すアクションを追加いたします。<br>False 側の <strong>アクションの追加</strong> を押下し、下図のような <strong>応答</strong> アクションを追加いたします。<br>状態コードに 202 を、Location ヘッダーにサーバー側ロジック アプリの URL を設定いたします。<br>本設定により処理が継続中であるため、サーバー側ロジック アプリを再度呼び出すことで改めて処理状況を確認して欲しい旨をクライアント側ロジック アプリに伝えられます。<br>また、Retry-after ヘッダーに 30 を設定しているため、クライアント側ロジック アプリからの処理状況の確認リクエストは 30 秒毎に行われることとなります。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-15.png"></p><p>以上の設定により非同期ポーリング パターンに対応するようなサーバー側ロジック アプリの構築を行えました。<br>ワークフローの全体像は下図の通りとなります。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/server2-16.png"></p><h4 id="2-6-サンプルの動作"><a href="#2-6-サンプルの動作" class="headerlink" title="2-6. サンプルの動作"></a>2-6. サンプルの動作</h4><p>構築したサンプルを実行し、タイムアウト エラーが解消した事を確認します。</p><p>クライアント側のロジック アプリの概要からトリガーの実行を行います。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-1.png"></p><p><strong>実行の履歴</strong> タブから約 3 分の経過後に実行が成功する事を確認できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-2.png"></p><p>上図の成功した実行を押下すると、成功した実行の履歴を閲覧可能です。<br>HTTP アクションの実行が 3 分の経過後に成功し、サーバーからの処理完了の旨を示すメッセージを取得できたことを確認できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-3.png"></p><p>次に、サーバー側ロジック アプリの実行履歴を同様に確認します。<br>サーバー側ロジック アプリの <strong>概要</strong> メニューから <strong>実行の履歴</strong> タブを選択いたします。<br>約 3 分の経過後に成功する 1 つの実行と、1 秒未満に処理が成功する実行が 6 つ確認できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-4.png"></p><p>約 3 分の処理を行っている実行はサーバーの処理を行っている実行となります。<br>実行履歴を押下し、こちらの内容を確認していきます。<br>下図のように、3 分の待ち時間処理の前後に <strong>BLOB を作成する（V2）</strong> で BLOB ストレージ上の処理状態の管理ファイル（status.json）を更新している様子を確認できます。<br>3 分の待ち時間処理が終了すると処理状態を “finished” に変更して処理を終了します。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-5.png"></p><p>1 秒未満に処理が成功している 6 つの実行はクライアント側ロジック アプリがサーバーの処理状態を確認する際に行ったリクエストによるものとなります。<br>内訳は 5 回が処理中の旨を返しており、1 回が処理を完了した旨を返すものとなります。</p><p>処理中の旨を返す実行の履歴をピックアップして表示すると下図のようになります。<br>下図のように処理状態が “finished” でないため、クライアント側に再度の確認を要求していることを確認できます。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-6.png"></p><p>最後に、処理を完了した旨を返す実行について確認いたします。<br>実行履歴の内、一番新しいものが該当いたします。<br>詳細は下図の通りとなります。<br>処理状態が “finished” となっていることを確認できたため、クライアント側に処理が完了した旨とメッセージを返しております。<br><img src="/blog/LogicApps/HttpAction-AsyncPattern-Polling/exec2-7.png"></p><p>以上のように、非同期ポーリング パターンを用いる事で HTTP アクションのタイムアウト エラーを回避できることをサンプルにてご紹介いたしました。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、非同期ポーリング パターンを用いる事で HTTP アクションのタイムアウト エラーを回避できることをサンプルにてご紹介いたしました。<br>サーバー側の処理を HTTP アクションの非同期ポーリング パターンに沿うように工夫いただくことで HTTP アクションのタイムアウト期間の制限を超えるような処理も Logic Apps から呼び出し可能となります。<br>長時間の処理時間を伴う処理を Logic Apps から HTTP アクションで呼び出す場合は、非同期ポーリング パターンが有効となる可能性がございますのでご検討いただけますと幸いです。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。 Azure Integration サポート チームの大田です。&lt;br&gt;Logic Apps の HTTP アクションから長時間の処理を伴うサービスをリクエストする場合、下図のようにタイムアウト エラーを生じます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/LogicApps/HttpAction-AsyncPattern-Polling/timeout-error.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;本エラーは下記の公開情報にございます HTTP 要求のタイムアウト期間に関する制限が原因となります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-limits-and-config?tabs=azure-portal#http-request-limits&quot;&gt;HTTP 要求のタイムアウト期間に関する制限&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本記事では非同期ポーリング パターンを用いて HTTP アクションのタイムアウト エラーを回避する方法をサンプルを用いてご紹介します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="HTTP アクション" scheme="https://jpazinteg.github.io/blog/tags/HTTP-%E3%82%A2%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Logic Apps (Standard) を作成するために必要な最小権限</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/StandardLogicApps-Authorization/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/StandardLogicApps-Authorization/</id>
    <published>2022-08-26T07:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.231Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。  Azure Integration サポート チームの継松です。<br>Azure では各ユーザーやグループなどに対して特定の権限を付与し、Azure リソースへのアクセスを制御することが可能です。<br>今回は、 Logic Apps (Standard) を作成するために割り当てが必要な Azure 組み込みロールについてご紹介します。</p><span id="more"></span><h2 id="こんな方におすすめです"><a href="#こんな方におすすめです" class="headerlink" title="こんな方におすすめです"></a>こんな方におすすめです</h2><ul><li>初めて Logic Apps (Standard) での開発をされる方</li><li>Azure リソースの管理者</li></ul><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>権限が不足している場合に発生するエラーの例</li><li>必要となる組み込みロールについて</li><li>組み込みロールの付与方法について</li><li>まとめ</li></ul><h2 id="権限が不足している場合に発生するエラー例"><a href="#権限が不足している場合に発生するエラー例" class="headerlink" title="権限が不足している場合に発生するエラー例"></a>権限が不足している場合に発生するエラー例</h2><p>権限が不足した状態で Logic Apps (Standard) のデプロイをしますと下図のようなエラーが発生します。</p><p><img src="/blog/LogicApps/StandardLogicApps-Authorization/error.png"></p><h2 id="必要となる組み込みロール"><a href="#必要となる組み込みロール" class="headerlink" title="必要となる組み込みロール"></a>必要となる組み込みロール</h2><ul><li>Logic App Contributor (ロジック アプリの共同作成者)</li><li>Storage Account Contributor (ストレージ アカウントの共同作成者)</li><li>Web Plan Contributor (Web プラン共同作成者)</li><li>Website Contributor (Web サイト共同作成者)</li></ul><p>参考資料 :<br>Azure 組み込みロール - Azure RBAC | Microsoft Docs # Logic App Contributor (ロジック アプリの共同作成者)<br><a href="https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#logic-app-contributor">https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#logic-app-contributor</a></p><p>Azure 組み込みロール - Azure RBAC | Microsoft Docs # Storage Account Contributor (ストレージ アカウントの共同作成者)<br><a href="https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#storage-account-contributor">https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#storage-account-contributor</a> </p><p>Azure 組み込みロール - Azure RBAC | Microsoft Docs # Web Plan Contributor (Web プラン共同作成者)<br><a href="https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#web-plan-contributor">https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#web-plan-contributor</a> </p><p>Azure 組み込みロール - Azure RBAC | Microsoft Docs # Website Contributor (Web サイト共同作成者)<br><a href="https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#website-contributor">https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles#website-contributor</a> </p><h2 id="組み込みロールの付与方法について"><a href="#組み込みロールの付与方法について" class="headerlink" title="組み込みロールの付与方法について"></a>組み込みロールの付与方法について</h2><p>実際に組み込みロールを付与するにあたっては、以下が必要です。</p><ul><li>Microsoft.Authorization/roleAssignments/write アクセス許可 (ユーザー アクセス管理者や所有者など)</li></ul><p>また、スコープについては、サブスクリプション全体での制御を許可するのか、または特定のリソース グループに対してのみに対しての制御とするのか、ご検討の上ご指定ください。<br>Standard Logic Apps と同じリソースグループ内に API 接続を作成する仕様のため、リソース スコープではなくリソースグループ スコープ以上でのロールの割り当てを推奨しております。</p><p>詳しくは下記の公開資料をご参考ください。</p><p>Azure portal を使用して Azure ロールを割り当てる - Azure RBAC | Microsoft Docs<br><a href="https://docs.microsoft.com/ja-jp/azure/role-based-access-control/role-assignments-portal?tabs=current">https://docs.microsoft.com/ja-jp/azure/role-based-access-control/role-assignments-portal?tabs=current</a></p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、Logic Apps Standard タイプを作成するにあたって割り当てが必要な Azure 組み込みロールについてご紹介しました。<br>他にも、 Azure リソースを作成・制御・管理するにあたって必要な権限を含む Azure 組み込みロールを確認する必要がありましたら、下記の公開資料をご参考くださいませ。</p><p>Azure 組み込みロール - Azure RBAC | Microsoft Docs<br><a href="https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles">https://docs.microsoft.com/ja-jp/azure/role-based-access-control/built-in-roles</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。  Azure Integration サポート チームの継松です。&lt;br&gt;Azure では各ユーザーやグループなどに対して特定の権限を付与し、Azure リソースへのアクセスを制御することが可能です。&lt;br&gt;今回は、 Logic Apps (Standard) を作成するために割り当てが必要な Azure 組み込みロールについてご紹介します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>Standard Logic Apps で AAD 認証する方法について</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/AadAuthentication/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/AadAuthentication/</id>
    <published>2022-08-16T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.175Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Integration サポート チームの 川合 です。<br>Standard Logic Apps （シングルテナント） をご利用のお客様も多いかと思いますが、App Service や Azure Functions と異なり、Standard Logic Apps では Azure Portal から AAD 認証の設定が出来ません。</p><p><img src="/blog/LogicApps/AadAuthentication/image000.png"></p><p>今回は、REST API を用いて Standard Logic Apps でも AAD 認証を行う方法をご紹介いたします。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>事前準備</li><li>Azure ActiveDirectory へのアプリ登録</li><li>トークン取得</li><li>authsettingsV2 API の呼び出し</li><li>AAD 認証による Standard Logic Apps の実行</li><li>まとめ</li></ul><h2 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h2><p>今回の記事については以下の情報を参考にしております。</p><ul><li><a href="https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/trigger-workflows-in-standard-logic-apps-with-easy-auth/ba-p/3207378">Trigger workflows in Standard logic apps with Easy Auth</a></li></ul><p>また、REST API の実行方法については <a href="https://www.postman.com/downloads/">postman</a> を利用してリクエストを送信します。そのため、Postman のインストール設定を事前に実施いただくことが前提の記事となります。</p><p>途中でトークンのデコードを行う手順がございますが、 <a href="https://jwt.io/">jwt.io</a> というサイトで行います。</p><p>以上を基に、本記事では認証手順を記載いたします。</p><h2 id="Azure-ActiveDirectory-へのアプリ登録"><a href="#Azure-ActiveDirectory-へのアプリ登録" class="headerlink" title="Azure ActiveDirectory へのアプリ登録"></a>Azure ActiveDirectory へのアプリ登録</h2><p>始めに、トークンを取得する為にお客様がご利用いただいている Azure ActiveDirectory に対して “アプリの登録” を行います。<br>なお、トークンの取得方法については複数ございますため、お客様にとって容易な方法でご対応いただければと存じます。</p><p>＜アプリの登録手順＞<br>１．Azure Portal より Azure Active Directory を選択し、[アプリの登録] を選択。<br><img src="/blog/LogicApps/AadAuthentication/image001.png"></p><p>２．以下の内容で登録。<br>・名前 = 任意の値<br>・サポートされているアカウントの種類 = “この組織ディレクトリのみに含まれるアカウント (Microsoft のみ - シングル テナント)</p><p>以降変更なし。<br><img src="/blog/LogicApps/AadAuthentication/image002.png"></p><p>アプリの登録が出来ましたら、[概要] より以下の内容を控えていただきます。</p><p><img src="/blog/LogicApps/AadAuthentication/image003.png"></p><p>＜控える項目＞<br>・アプリケーション (クライアント) ID<br>・オブジェクト ID<br>・ディレクトリ (テナント) ID</p><p>次に、[証明書とシークレット] のメニューより、[新しいクライアント シークレット] を作成いただきます。<br>こちらについては有効期限はお客様の要件によって任意の値を設定下さいますようお願いいたします。<br>ここで表示されるクライアントシークレットの値は一度しか表示されませんので、確実にこの作成したタイミングで控えていただきますようお願いいたします。</p><p><img src="/blog/LogicApps/AadAuthentication/image004.png"></p><p>＜控える項目＞<br>・値</p><p>Azure ActiveDirectory へのアプリ登録の方法については以上となります。次の手順で、認証に利用するトークンの情報を取得致します。</p><h2 id="トークン取得"><a href="#トークン取得" class="headerlink" title="トークン取得"></a>トークン取得</h2><p>続いて、AAD 認証に必要な REST API を設定いたします。まず、先に記載しました Postman を起動し、トークンを取得します。<br><img src="/blog/LogicApps/AadAuthentication/image005.png"></p><p>・POSTメソッド<br><a href="https://login.microsoftonline.com/%7B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA(%E3%83%86%E3%83%8A%E3%83%B3%E3%83%88)ID%7D/oauth2/token">https://login.microsoftonline.com/{ディレクトリ(テナント)ID}/oauth2/token</a><br><img src="/blog/LogicApps/AadAuthentication/image00501.png"></p><p>Body には [x-www-from-urlencoded] を指定し、以下の内容を設定します。</p><p><img src="/blog/LogicApps/AadAuthentication/image006.png"><br>client_id = AADに登録したアプリの [アプリケーション (クライアント) ID] を指定<br>resource = <a href="https://management.azure.com/">https://management.azure.com</a><br>client_secret = クライアントシークレットの [値]<br>grant_type = client_credentials</p><p>それ以外のパラメーターは特に設定不要でございます。</p><p>以上の設定が設定出来ましたら、画面右上の [Send] ボタンを選択し、リクエストを送信します。<br><img src="/blog/LogicApps/AadAuthentication/image00502.png"></p><p>リクエストが成功すると、Body の中にトークンの値が表示されますので、 “access_token” を全て控えていただきます。</p><p>＜控える項目＞<br>・access_token<br><img src="/blog/LogicApps/AadAuthentication/image00503.png"></p><p>続いて、取得した “access_token” をデコードし、oid を取得します。</p><p><a href="https://jwt.io/">jwt.io</a></p><p><img src="/blog/LogicApps/AadAuthentication/image00701.png"></p><p>ブラウザで上記サイトを開いたら以下の [Encoded] に先ほどコピーした “access_token” を全て貼り付けます。<br><img src="/blog/LogicApps/AadAuthentication/image007.png"></p><p>画面右側の [Decoded] - [PAYLOAD] の中段あたりに “oid” が表示されるので、そちらの値を控えていただきます。<br><img src="/blog/LogicApps/AadAuthentication/image008.png"></p><p>＜控える項目＞<br>・oid</p><p>トークン取得の作業としては以上となりますが、”access_token” および “oid” については後続の手順で利用しますので、そのまま残していただきますようお願いいたします。</p><h2 id="authsettingsV2-API-の呼び出し"><a href="#authsettingsV2-API-の呼び出し" class="headerlink" title="authsettingsV2 API の呼び出し"></a>authsettingsV2 API の呼び出し</h2><p>続いて、authsettingsV2 API を呼び出します。こちらは Standard Logic Apps に対して AAD 認証を行うための事前処理を行うものでございます。<br>こちらの手順では再度 Postman を用いてリクエストを送信いたします。</p><p>始めに、HTTP リクエストは以下の通り設定いただきます。</p><p>・PUT メソッド</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://management.azure.com/subscriptions/&#123;subscriptionId&#125;/resourcegroups/&#123;resourceGroupName&#125;/providers/Microsoft.Web/sites/&#123;logicAppName&#125;/config/authsettingsV2?api-version=2021-02-01</span><br></pre></td></tr></table></figure><p>・subscriptionId = Standard Logic Apps が作成されている サブスクリプション ID<br>・resourceGroupName = Standard Logic Apps が作成されている リソースグループ<br>・logicAppName = Standard Logic Apps （ワークフロー名ではない）</p><p>それぞれの値は Standard Logic Apps の [概要] から取得いただくことが可能でございます。<br><img src="/blog/LogicApps/AadAuthentication/image009.png"></p><p>PUT メソッドで設定する Body については以下の記事を参考に設定いただきます。</p><ul><li><a href="https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/trigger-workflows-in-standard-logic-apps-with-easy-auth/ba-p/3207378">Trigger workflows in Standard logic apps with Easy Auth</a></li></ul><p>＜Body＞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;id&quot;: &quot;/subscriptions/&#123;subscriptionId&#125;/resourcegroups/&#123;resourceGroupName&#125;/providers/Microsoft.Web/sites/&#123;logicAppName&#125;/config/authsettingsV2&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;authsettingsV2&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;Microsoft.Web/sites/config&quot;,</span><br><span class="line">    &quot;location&quot;: &quot;&#123;locationOfLogicApp&#125;&quot;,</span><br><span class="line">    &quot;tags&quot;: &#123;&#125;,</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;platform&quot;: &#123;</span><br><span class="line">            &quot;enabled&quot;: true,</span><br><span class="line">            &quot;runtimeVersion&quot;: &quot;~1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;globalValidation&quot;: &#123;</span><br><span class="line">            &quot;requireAuthentication&quot;: true,</span><br><span class="line">            &quot;unauthenticatedClientAction&quot;: &quot;AllowAnonymous&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;identityProviders&quot;: &#123;</span><br><span class="line">            &quot;azureActiveDirectory&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: true,</span><br><span class="line">                &quot;registration&quot;: &#123;</span><br><span class="line">                    &quot;openIdIssuer&quot;: &quot;&#123;issuerId&#125;&quot;,</span><br><span class="line">                    &quot;clientId&quot;: &quot;&#123;clientId&#125;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;login&quot;: &#123;</span><br><span class="line">                    &quot;disableWWWAuthenticate&quot;: false</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;validation&quot;: &#123;</span><br><span class="line">                    &quot;jwtClaimChecks&quot;: &#123;&#125;,</span><br><span class="line">                    &quot;allowedAudiences&quot;: [</span><br><span class="line">                        &quot;&#123;audience1&#125;&quot;,</span><br><span class="line">                        &quot;&#123;audience2&#125;&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    &quot;defaultAuthorizationPolicy&quot;: &#123;</span><br><span class="line">                        &quot;allowedPrincipals&quot;: &#123;</span><br><span class="line">                            &quot;identities&quot;: [</span><br><span class="line">                                &quot;&#123;ObjectId of AAD app&#125;&quot;</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;facebook&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;registration&quot;: &#123;&#125;,</span><br><span class="line">                &quot;login&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;gitHub&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;registration&quot;: &#123;&#125;,</span><br><span class="line">                &quot;login&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;google&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;registration&quot;: &#123;&#125;,</span><br><span class="line">                &quot;login&quot;: &#123;&#125;,</span><br><span class="line">                &quot;validation&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;twitter&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;registration&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;legacyMicrosoftAccount&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;registration&quot;: &#123;&#125;,</span><br><span class="line">                &quot;login&quot;: &#123;&#125;,</span><br><span class="line">                &quot;validation&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;apple&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;registration&quot;: &#123;&#125;,</span><br><span class="line">                &quot;login&quot;: &#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;login&quot;: &#123;</span><br><span class="line">            &quot;routes&quot;: &#123;&#125;,</span><br><span class="line">            &quot;tokenStore&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: false,</span><br><span class="line">                &quot;tokenRefreshExtensionHours&quot;: 72.0,</span><br><span class="line">                &quot;fileSystem&quot;: &#123;&#125;,</span><br><span class="line">                &quot;azureBlobStorage&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;preserveUrlFragmentsForLogins&quot;: false,</span><br><span class="line">            &quot;cookieExpiration&quot;: &#123;</span><br><span class="line">                &quot;convention&quot;: &quot;FixedTime&quot;,</span><br><span class="line">                &quot;timeToExpiration&quot;: &quot;08:00:00&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;nonce&quot;: &#123;</span><br><span class="line">                &quot;validateNonce&quot;: true,</span><br><span class="line">                &quot;nonceExpirationInterval&quot;: &quot;00:05:00&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;httpSettings&quot;: &#123;</span><br><span class="line">            &quot;requireHttps&quot;: true,</span><br><span class="line">            &quot;routes&quot;: &#123;</span><br><span class="line">                &quot;apiPrefix&quot;: &quot;/.auth&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;forwardProxy&quot;: &#123;</span><br><span class="line">                &quot;convention&quot;: &quot;NoProxy&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>隅付き括弧で記載されているパラメーターについては以下の通り設定いたします。</p><p>・locationOfLogicApp = japaneast や japanwest 等 Standard Logicc Apps が存在するリージョン<br>・issuerId = “<a href="https://sts.windows.net/%7B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA(%E3%83%86%E3%83%8A%E3%83%B3%E3%83%88)ID%7D/">https://sts.windows.net/{ディレクトリ(テナント)ID}/</a> “<br>・clientId = トークンから取得した oid<br>・audience1 = <a href="https://management.azure.com/">https://management.azure.com</a><br>・audience2 = https://{logicAppName}.azurewebsites.net<br>・ObjectId of AAD app = トークンから取得した oid</p><p>上記の通り Body が設定出来ましたら、Postman の Authorization について、以下の通り設定いたします。</p><p>・Type = “Bearer Token”<br>・Token = “access_token”<br><img src="/blog/LogicApps/AadAuthentication/image014.png"></p><p>以上の設定が出来ましたら、画面右上の [Send] ボタンを選択し、リクエストを送信します。</p><p>Status 200 が返却されていればこちらの手順については完了です。<br><img src="/blog/LogicApps/AadAuthentication/image011.png"></p><h2 id="AAD-認証による-Standard-Logic-Apps-の実行"><a href="#AAD-認証による-Standard-Logic-Apps-の実行" class="headerlink" title="AAD 認証による Standard Logic Apps の実行"></a>AAD 認証による Standard Logic Apps の実行</h2><p>以上の事前準備が出来ましたら、以下の REST API を実行し、Standard Logic Apps を実行致します。<br>なお、AAD 認証で呼び出す Standard Logic Apps のトリガーについては “HTTP 要求の受信時” トリガーである必要がございますため、ご留意いただきますようお願い申し上げます。</p><p><img src="/blog/LogicApps/AadAuthentication/image01101.png"></p><p>・POST メソッド</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://&#123;logicAppName&#125;.azurewebsites.net:443/api/&#123;workflowName&#125;/triggers/manual/invoke?api-version=2020-05-01-preview</span><br></pre></td></tr></table></figure><p>・logicAppName = Standard Logic Apps （ワークフロー名ではない）<br>・workflowName = Standard Logic Apps に構築しているワークフロー名<br><img src="/blog/LogicApps/AadAuthentication/image012.png"><br><img src="/blog/LogicApps/AadAuthentication/image013.png"></p><p>続いて、Postman Headers に以下を追加いたします。</p><p>・KEY = Authorization<br>・VALUE = Bearer “access_token”<br><img src="/blog/LogicApps/AadAuthentication/image014.png"></p><p>以上の設定が出来ましたら、画面右上の [Send] ボタンを選択し、リクエストを送信します。</p><p>Status 202 が表示されましたら無事 Standard Logic Apps のワークフローが AAD 認証によって実行されます。<br><img src="/blog/LogicApps/AadAuthentication/image015.png"></p><p>Standard Logic Apps の実行結果に Postman から実行されたログが出力されます。<br><img src="/blog/LogicApps/AadAuthentication/image016.png"></p><p>以上の手順にて、AAD 認証を用いてStandard Logic Apps を実行することが可能でございます。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内いたしましたが、ご理解いただけましたでしょうか。</p><ul><li>事前準備</li><li>Azure ActiveDirectory へのアプリ登録</li><li>API の設定方法</li><li>Standard Logic Apps の実行方法</li><li>まとめ</li></ul><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p><p>&lt;Azure Logic Apps の参考サイト&gt;<br>– 概要 - Azure Logic Apps とは<br><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview">https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview</a><br>Azure Logic Apps とは、ロジック アプリ デザイナーでフロー チャートを用いて作成したワークフローを自動実行するソリューションです。<br>Azure Logic Apps では、条件分岐などを実装することができ、ワークフローの実行状況に応じて実行する処理を分岐することが可能です。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは！Azure Integration サポート チームの 川合 です。&lt;br&gt;Standard Logic Apps （シングルテナント） をご利用のお客様も多いかと思いますが、App Service や Azure Functions と異なり、Standard Logic Apps では Azure Portal から AAD 認証の設定が出来ません。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/LogicApps/AadAuthentication/image000.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;今回は、REST API を用いて Standard Logic Apps でも AAD 認証を行う方法をご紹介いたします。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Standard Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Standard-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>Logic Apps から Graph API を実行する</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/Integration-graphApi/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/Integration-graphApi/</id>
    <published>2022-07-31T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.215Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。Azure Integration サポート チームの髙橋です。<br>Logic Apps から Graph API を実行する方法について説明します。</p><ul><li>Logic Apps から Graph API を実行したい方</li></ul><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ul><li>今回の記事では従量課金版ロジック アプリを利用します。ただし、スタンダード版のロジック アプリでも問題ありません。</li><li>Graph API は「アプリケーション」のアクセス許可を使用しています。<ul><li>参考ドキュメント : <a href="https://docs.microsoft.com/ja-jp/graph/auth-v2-service">ユーザーなしでアクセスを取得</a></li></ul></li><li>今回の記事では Azure Active Directory に登録されているユーザーの情報を取得する Graph API を利用しております。<ul><li>参考ドキュメント : <a href="https://docs.microsoft.com/ja-jp/graph/api/user-get?view=graph-rest-1.0&tabs=http">ユーザーの取得</a></li></ul></li></ul><h1 id="流れ"><a href="#流れ" class="headerlink" title="流れ"></a>流れ</h1><p>Graph API の実行には、トークンが必要となります。<br>トークンを取得するため、まずはアプリの登録 (サービス プリンシパルの作成) を行います。<br>アプリには Graph API を実行するために必要なアクセス許可を付与します。</p><p>また、Logic Apps の「HTTP」アクションでは、リクエスト内容に認証情報を含めることが可能です。<br>そのため、アプリの認証情報を「HTTP」アクションに設定し、実行時にはその認証情報を用いてまずトークンを取得し、<br>そのトークンを Authorization ヘッダーに格納し Graph API を実行する動作となります。</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="1-アプリを登録する"><a href="#1-アプリを登録する" class="headerlink" title="1. アプリを登録する"></a>1. アプリを登録する</h2><p>Azure Active Directory にて、アプリの登録 (サービス プリンシパルの作成) を行います。<br><strong>[Azure Active Directory] - [管理 - アプリの登録]</strong> と遷移し、「+ 新規登録」ボタンを押下します。<br><img src="/blog/LogicApps/Integration-graphApi/create_application01.PNG"></p><p>アプリの名前を任意に設定し、今回は「サポートされているアカウントの種類」にて「この組織ディレクトリのみに含まれるアカウント (&lt;テナント名&gt; のみ - シングル テナント)」を選択し、<br>「登録」ボタンを押下します。<br><img src="/blog/LogicApps/Integration-graphApi/create_application02.PNG"></p><p>作成が完了しましたら、**[管理 - アプリの登録]** にて該当するアプリを選択します。<br><strong>[概要]</strong> にて「アプリケーション (クライアント) ID」、および「ディレクトリ (テナント) ID」をコピーし、控えておきます。<br><img src="/blog/LogicApps/Integration-graphApi/create_application03.PNG"></p><p><strong>[管理 - 証明書とシークレット]</strong> に遷移し、「+ 新しいクライアント シークレット」を押下してシークレットを作成します。<br>作成されましたら、「値」をコピーし、こちらも控えておきます。<br>※ 「値」はシークレットを作成した直後のみに表示され、画面遷移等を行いますとマスクされますのでご注意ください。<br><img src="/blog/LogicApps/Integration-graphApi/create_application04.PNG"></p><p><strong>[管理 - API のアクセス許可]</strong> に遷移します。<br>この画面で、Graph API に必要なアクセス許可を付与します。<br>Graph API によって必要なアクセス許可は異なりますので、ご利用の Graph API の公開情報の「アクセス許可」をご確認ください。<br>今回の記事では、以下が該当いたします。<br><img src="/blog/LogicApps/Integration-graphApi/create_application05.PNG"></p><ul><li>参考ドキュメント : <a href="https://docs.microsoft.com/ja-jp/graph/api/user-get?view=graph-rest-1.0&tabs=http#permissions">ユーザーの取得</a></li></ul><p><strong>「+ アクセス許可の追加」</strong> を押下します。<br><img src="/blog/LogicApps/Integration-graphApi/create_application06.PNG"></p><p>「Microsoft API」タブにて <strong>「Microsoft Graph」</strong> を選択します。<br><img src="/blog/LogicApps/Integration-graphApi/create_application07.PNG"></p><p><strong>「アプリケーションの許可」</strong> を選択し、公開情報に記載されている「アクセス許可」に従い、必要なアクセス許可にチェックを入れます。<br>完了しましたら <strong>「アクセス許可の追加」</strong> ボタンを押下します。<br><img src="/blog/LogicApps/Integration-graphApi/create_application08.PNG"></p><p>必要なアクセス許可をすべて追加しましたら、<strong>「&lt;テナント名&gt; に管理者の同意を与えます」</strong> を押下し、アクセス許可の「状態」が緑色になることを確認します。<br><img src="/blog/LogicApps/Integration-graphApi/create_application09.PNG"></p><h2 id="2-Logic-Apps-で「HTTP」アクションを設定する。"><a href="#2-Logic-Apps-で「HTTP」アクションを設定する。" class="headerlink" title="2. Logic Apps で「HTTP」アクションを設定する。"></a>2. Logic Apps で「HTTP」アクションを設定する。</h2><p><strong>[ロジック アプリ] - [&lt;対象の ロジック アプリ&gt;] - [開発ツール - ロジック アプリ デザイナー]</strong> と遷移します。<br>「HTTP」アクションを追加し、以下のように値を設定します。<br><img src="/blog/LogicApps/Integration-graphApi/set_http01.PNG"></p><ul><li>方法 : GET</li><li>URI : <a href="https://graph.microsoft.com/v1.0/users/">https://graph.microsoft.com/v1.0/users/</a>&lt;ユーザーのオブジェクト ID&gt;</li><li>認証</li><li>認証の種類 : Active Directory OAuth</li><li>機関 : 空欄</li><li>テナント : 1. で控えておきました「ディレクトリ (テナント) ID」をペーストします。</li><li>対象ユーザー : <a href="https://graph.microsoft.com/">https://graph.microsoft.com</a></li><li>クライアント ID : 1. で控えおきました「アプリケーション (クライアント) ID」をペーストします。</li><li>資格情報の種類 : シークレット</li><li>シークレット : 1. で控えておきましたシークレットの「値」をペーストします。<br>※ 「HTTP」アクションの「Add new paramter」を押下し、「認証」にチェックを入れますと「認証」の設定が行えます。<br>※ 「方法」および「URI」の設定内容につきましては、ご利用いただく Graph API の公開情報をご参照ください。</li></ul><p>Logic Apps を保存し実行されますと、正常にユーザーの情報が取得できていることをご確認いただけます。<br><img src="/blog/LogicApps/Integration-graphApi/result01.PNG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。Azure Integration サポート チームの髙橋です。&lt;br&gt;Logic Apps から Graph API を実行する方法について説明します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logic Apps から Graph API を実行したい方&lt;/li&gt;
&lt;/u</summary>
      
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Graph API" scheme="https://jpazinteg.github.io/blog/tags/Graph-API/"/>
    
  </entry>
  
  <entry>
    <title>ログ アラート ルールの発報時に出力されたデータからクエリの検索結果を取得する</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/Integration-logAlertRule/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/Integration-logAlertRule/</id>
    <published>2022-07-01T01:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.219Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。  Azure Integration サポート チームの北山です。<br>ログ アラート発報時に出力されるデータに含まれた URL から、アラート発報時に評価されたクエリの結果を取得する方法について説明します。</p><ul><li>ログ アラート発報時に、ロジック アプリを使ってメール通知されたい方、通知されるメールにクエリの結果を含めたい方</li><li>アラート発報時に評価されたクエリの結果を別のシステムへ連携されたい方</li></ul><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ul><li>今回の記事では従量課金版ロジック アプリを利用します。ただし、スタンダード版のロジック アプリでも問題ありません。</li><li>ログ アラート ルールの API バージョンは、2022 年 6 月 30 日時点で最新版の 2021-08-01 を想定しています。<ul><li>これはアラート スキーマが <strong>monitoringService = Log Alerts V2</strong> を想定しております。</li><li>参考ドキュメント : <a href="https://docs.microsoft.com/ja-jp/azure/azure-monitor/alerts/alerts-common-schema-definitions#monitoringservice--log-alerts-v2">共通アラート スキーマ定義</a></li></ul></li></ul><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="1-アラート発報時に実行されるロジック-アプリの作成"><a href="#1-アラート発報時に実行されるロジック-アプリの作成" class="headerlink" title="1. アラート発報時に実行されるロジック アプリの作成"></a>1. アラート発報時に実行されるロジック アプリの作成</h2><p>アラート発報時に実行されるロジック アプリを、Azure portal から作成します。  </p><blockquote><p>今回の記事では従量課金版ロジック アプリを利用しております。</p></blockquote><p><img src="/blog/LogicApps/Integration-logAlertRule/create-logicapp01.png"></p><p>ロジック アプリ作成後に、テンプレートとして <strong>[HTTP 要求の受信時]</strong> を選択します。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-logicapp02.png"></p><p><strong>[サンプルのペイロードを使用してスキーマを生成する]</strong> をクリックします。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-logicapp03.png"></p><p>下記の JSON データをそのままコピー &amp; ペーストして、**[完了]** をクリックします。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;schemaId&quot;</span>: <span class="string">&quot;azureMonitorCommonAlertSchema&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;essentials&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;alertId&quot;</span>: <span class="string">&quot;/subscriptions/SUBSCRIPTION_ID/providers/Microsoft.AlertsManagement/alerts/8f29da04-5533-c8d1-d84d-b76efde41881&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;alertRule&quot;</span>: <span class="string">&quot;test-log-alert-forBlog&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;severity&quot;</span>: <span class="string">&quot;Sev3&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;signalType&quot;</span>: <span class="string">&quot;Log&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;monitorCondition&quot;</span>: <span class="string">&quot;Fired&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;monitoringService&quot;</span>: <span class="string">&quot;Log Alerts V2&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;alertTargetIDs&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;/subscriptions/SUBSCRIPTION_ID/resourcegroups/RESOURCEGROUP_NAME/providers/microsoft.hybridcompute/machines/RESOURCE_NAME&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;configurationItems&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;/subscriptions/SUBSCRIPTION_ID/resourcegroups/RESOURCEGROUP_NAME/providers/microsoft.hybridcompute/machines/RESOURCE_NAME&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;originAlertId&quot;</span>: <span class="string">&quot;eeb6feef-927a-4b69-8d56-bfa33f6bb32d&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;firedDateTime&quot;</span>: <span class="string">&quot;2022-06-20T22:20:00.1015418Z&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;essentialsVersion&quot;</span>: <span class="string">&quot;1.0&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;alertContextVersion&quot;</span>: <span class="string">&quot;1.0&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;alertContext&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">&quot;conditionType&quot;</span>: <span class="string">&quot;LogQueryCriteria&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;condition&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;windowSize&quot;</span>: <span class="string">&quot;PT15M&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;allOf&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;searchQuery&quot;</span>: <span class="string">&quot;Heartbeat\n&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;metricMeasureColumn&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">                        <span class="attr">&quot;targetResourceTypes&quot;</span>: <span class="string">&quot;[&#x27;Microsoft.OperationalInsights/workspaces&#x27;]&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;operator&quot;</span>: <span class="string">&quot;LessThan&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;threshold&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;timeAggregation&quot;</span>: <span class="string">&quot;Count&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;dimensions&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;_ResourceId&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;/subscriptions/SUBSCRIPTION_ID/resourcegroups/RESOURCEGROUP_NAME/providers/microsoft.hybridcompute/machines/RESOURCE_NAME&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        <span class="attr">&quot;metricValue&quot;</span>: <span class="number">9</span>,</span><br><span class="line">                        <span class="attr">&quot;failingPeriods&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;numberOfEvaluationPeriods&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                            <span class="attr">&quot;minFailingPeriodsToAlert&quot;</span>: <span class="number">1</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">&quot;linkToSearchResultsUI&quot;</span>: <span class="string">&quot;https://portal.azure.com#XXXXXXXXX&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;linkToFilteredSearchResultsUI&quot;</span>: <span class="string">&quot;https://portal.azure.com#XXXXXXXXXXXX&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;linkToSearchResultsAPI&quot;</span>: <span class="string">&quot;https://api.loganalytics.io/v1/subscriptions/XXXXXXXXXXXXX&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;linkToFilteredSearchResultsAPI&quot;</span>: <span class="string">&quot;https://api.loganalytics.io/v1/subscriptions/XXXXXXXXXXXXX&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;windowStartTime&quot;</span>: <span class="string">&quot;2022-06-20T22:02:28Z&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;windowEndTime&quot;</span>: <span class="string">&quot;2022-06-20T22:17:28Z&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;customProperties&quot;</span>: <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/blog/LogicApps/Integration-logAlertRule/create-logicapp04.png"></p><p>その後ワークフローを保存します。<br>これでロジック アプリのスケルトンの作成は完了です。後ほどクエリを実行するための必要なアクションなどについて説明します。</p><h2 id="2-ログ-クエリを実行するためのマネージド-ID-を作成する"><a href="#2-ログ-クエリを実行するためのマネージド-ID-を作成する" class="headerlink" title="2. ログ クエリを実行するためのマネージド ID を作成する"></a>2. ログ クエリを実行するためのマネージド ID を作成する</h2><p>クエリの実行結果の取得は、下記の公開情報に記載がある Log Analytics API を用いて取得します。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/azure-monitor/alerts/alerts-common-schema-definitions#monitoringservice--log-alerts-v2">共通アラート スキーマ定義</a></li></ul><p><img src="/blog/LogicApps/Integration-logAlertRule/managedid-creation01.png"></p><p>Log Analytics API を使用するためには Azure への認証が必要です。<br>今回はロジック アプリのマネージド ID を用いて認証する方法を選択します。  </p><p>有効化するために、当該ロジック アプリのページへ移動し、左側ペインより <strong>[ID]</strong> をクリックします。<br>その後、状態の箇所をオフからオンに変更します。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/managedid-creation02.png"></p><p>有効化したマネージド ID に対してロールを付与するために、**[Azure ロールの割り当て]** をクリックします。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/managedid-creation03.png"></p><p><strong>[ロールの割り当ての追加]</strong> をクリックし、ログが保存された Log Analytics ワークスペースを管理しているリソース グループをスコープに、**[閲覧者]** ロールを指定します。  </p><blockquote><p>検索対象のワークスペースが Log Analytics ではなく Application Insights の場合は、当該 Application Insights リソースを管理しているリソース グループをスコープとしてください。</p></blockquote><p><img src="/blog/LogicApps/Integration-logAlertRule/managedid-creation04.png"></p><p>その後保存して、マネージド ID の有効化作業は完了です。</p><h2 id="3-Log-Analytics-API-にアクセスし、クエリ結果を取得するワークフローを作成する"><a href="#3-Log-Analytics-API-にアクセスし、クエリ結果を取得するワークフローを作成する" class="headerlink" title="3. Log Analytics API にアクセスし、クエリ結果を取得するワークフローを作成する"></a>3. Log Analytics API にアクセスし、クエリ結果を取得するワークフローを作成する</h2><p>当該ロジック アプリ ページから <strong>[ロジック アプリ デザイナー]</strong> をクリックし、ワークフローを編集する画面へ移動します。</p><p>HTTP 組み込みコネクタの <strong>[HTTP]</strong> アクションを追加します。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-01.png"></p><p>方法の箇所には <strong>[GET]</strong> をご指定いただき、URI の箇所には <strong>[動的なコンテンツ - linkToSearchResultsAPI]</strong> を指定します。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-02.png"></p><p>その後、自動的に <strong>[For each]</strong> が追加されますが、そのままで問題ありません。<br>これは、linkToSearchResultsAPI オブジェクトを保持している親オブジェクト (allOf オブジェクト) のデータ型が配列であるため、自動的に For each が作成され配列内のオブジェクト一つ一つにアクセスする必要があるためです。<br>ログ アラート ルールが出力する JSON データの allOf オブジェクトは要素数が必ず 1 つであるため、そのままで問題ありません。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-03.png"></p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-04.png"></p><p>引き続き HTTP アクションの編集画面に戻り、**[Add new parameter]** から <strong>[認証]</strong> をクリックします。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-05.png"></p><p>認証の種類に **[マネージド ID]**、マネージド ID に **[システム割り当てマネージド ID]**、対象ユーザー に <strong>[<a href="https://api.loganalytics.io]">https://api.loganalytics.io]</a></strong> を指定します。</p><blockquote><p>Application Insights のログ アラート ルールの場合は、対象ユーザーに [<a href="https://api.applicationinsights.io]">https://api.applicationinsights.io]</a> をご指定ください。</p></blockquote><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-06.png"></p><p>その後、編集した内容を保存して完了です。</p><p>試しに、意図的にログ アラートを発報してみます。<br>すると、下図のようにデータの取得が確認できました。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/create-workflow-07.png"></p><p>参考までに、実際に実行されたクエリと HTTP アクションによって取得出来たデータを下記に記載します。</p><p>ログ アラート ルールに指定したクエリ</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Heartbeat</span><br><span class="line">| project TimeGenerated, Computer, OSType, ResourceGroup, Resource</span><br></pre></td></tr></table></figure><p>HTTP アクションの出力結果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;statusCode&quot;: 200,</span><br><span class="line">    &quot;headers&quot;: &#123;</span><br><span class="line">        &quot;Transfer-Encoding&quot;: &quot;chunked&quot;,</span><br><span class="line">        &quot;Connection&quot;: &quot;keep-alive&quot;,</span><br><span class="line">        &quot;Strict-Transport-Security&quot;: &quot;max-age=15724800; includeSubDomains&quot;,</span><br><span class="line">        &quot;X-Content-Type-Options&quot;: &quot;nosniff&quot;,</span><br><span class="line">        &quot;Access-Control-Allow-Origin&quot;: &quot;*&quot;,</span><br><span class="line">        &quot;Access-Control-Expose-Headers&quot;: &quot;Retry-After,Age,WWW-Authenticate,x-resource-identities,x-ms-status-location&quot;,</span><br><span class="line">        &quot;Vary&quot;: &quot;Accept-Encoding&quot;,</span><br><span class="line">        &quot;Date&quot;: &quot;Thu, 30 Jun 2022 01:07:22 GMT&quot;,</span><br><span class="line">        &quot;Via&quot;: &quot;1.1 draft-oms-7b456954c5-bww9q&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application/json; charset=utf-8&quot;,</span><br><span class="line">        &quot;Content-Length&quot;: &quot;1056&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;body&quot;: &#123;</span><br><span class="line">        &quot;tables&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;name&quot;: &quot;PrimaryResult&quot;,</span><br><span class="line">                &quot;columns&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;name&quot;: &quot;TimeGenerated&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;datetime&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;name&quot;: &quot;Computer&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;string&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;name&quot;: &quot;OSType&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;string&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;name&quot;: &quot;ResourceGroup&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;string&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;name&quot;: &quot;Resource&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;string&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;rows&quot;: [</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T00:50:14.933Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T01:04:14.927Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T00:52:14.953Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T00:55:15.057Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T00:58:14.94Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T01:02:14.923Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T00:53:15.227Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T00:56:14.947Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    [</span><br><span class="line">                        &quot;2022-06-30T01:00:14.93Z&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;,</span><br><span class="line">                        &quot;Linux&quot;,</span><br><span class="line">                        &quot;jk-rg-azurearc-myLab01&quot;,</span><br><span class="line">                        &quot;mylab-mc-02&quot;</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>このように HTTP アクションをご利用いただく事で、アラート発報時に評価されたログが取得可能です。<br>この方法をもとに、お客様の要件にあったワークフローを作成いただければ幸いです。</p><h2 id="番外編-ログ-クエリの結果が記載されたメールを通知する"><a href="#番外編-ログ-クエリの結果が記載されたメールを通知する" class="headerlink" title="番外編. ログ クエリの結果が記載されたメールを通知する"></a>番外編. ログ クエリの結果が記載されたメールを通知する</h2><p>ここでは、**[HTML テーブルの作成]** アクションと <strong>[Office 365 Outlook]</strong> コネクタを用いて、ログ クエリの結果が記載されたメールを通知する方法について説明します。</p><p>まず、データ操作組み込みコネクタの <strong>[HTML テーブルの作成]</strong> を追加します。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-01.png"></p><p>開始の箇所をクリックし、式に対して下記のコードをコピー &amp; ペーストします。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array(outputs(&#x27;HTTP&#x27;)[&#x27;body&#x27;][&#x27;tables&#x27;][0][&#x27;rows&#x27;])</span><br></pre></td></tr></table></figure><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-02.png"></p><p>列に <strong>[カスタム]</strong> を指定し、ヘッダーに対して下記のコードをコピー &amp; ペーストします。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">outputs(&#x27;HTTP&#x27;)[&#x27;body&#x27;][&#x27;tables&#x27;][0][&#x27;columns&#x27;][0][&#x27;name&#x27;]</span><br></pre></td></tr></table></figure><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-03.png"></p><p>値に対して下記のコードをコピー &amp; ペーストします。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">item()[0]</span><br></pre></td></tr></table></figure><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-04.png"></p><p>このヘッダーと値の組み合わせを、ログ アラート ルールで指定したクエリで取得できる列の数だけ追加します。<br>私がログ アラート ルールに指定した下記のクエリの場合は、project 句に 5 種類の列を指定しています。<br>そのため、ヘッダーと値の組み合わせを 5 つ作成する必要があります。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Heartbeat</span><br><span class="line">| project TimeGenerated, Computer, OSType, ResourceGroup, Resource</span><br></pre></td></tr></table></figure><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-05.png"></p><p>ヘッダーと値の組み合わせを追加する際は、配列に指定する要素数を変更する必要がありますので、予めご留意ください。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-06.png"></p><p>その後、Office 365 Outlook コネクタの <strong>[メールの送信 (V2)]</strong> アクションを使って、**[HTML テーブルの作成]** アクションで作成した HTML オブジェクトを含めたメールを送信します。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-07.png"></p><p>下図のように、本文の箇所に <strong>[HTML テーブルの作成]</strong> アクションの出力を指定します。</p><blockquote><p>出力が表示されない場合は、[もっと見る] をクリックしてみてください。</p></blockquote><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-08.png"></p><p>その後ワークフローを保存し、意図的にログ アラートを発報させます。<br>すると下図のような、クエリ実行結果が HTML テーブル形式で記載されたメールが通知される事を確認しました。</p><p><img src="/blog/LogicApps/Integration-logAlertRule/mail-setting-09.png"></p><p>こちらは、単純にクエリ実行結果を記載したのみのメールですが、お客様の要件を満たすようなメール内容にカスタマイズいただけますと幸いです。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;こんにちは。  Azure Integration サポート チームの北山です。&lt;br&gt;ログ アラート発報時に出力されるデータに含まれた URL から、アラート発報時に評価されたクエリの結果を取得する方法について説明します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ログ アラート発報時に</summary>
      
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
    <category term="Azure Monitor" scheme="https://jpazinteg.github.io/blog/tags/Azure-Monitor/"/>
    
  </entry>
  
  <entry>
    <title>Azure Logic Apps の コネクタにおける不要な接続情報の削除方法について</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/ApiConnectionsDelete/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/ApiConnectionsDelete/</id>
    <published>2022-06-29T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.183Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Integration サポート チームの 川合 です。  </p><p>Azure Logic Apps でワークフローを作成する際に、コネクタの接続情報を設定する画面で以下のように複数項目が表示されることがあるかと思います。</p><p><img src="/blog/LogicApps/ApiConnectionsDelete/image01.png"></p><p>今回はこの接続情報について、誤って作成してしまった場合や不要になった場合にどうやって削除すればよいかをご案内いたします。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>接続情報 (API 接続) のリソースの確認方法について</li><li>接続情報 (API 接続) のリソースの削除方法について</li><li>まとめ</li></ul><h2 id="接続情報-API-接続-のリソースの確認方法について"><a href="#接続情報-API-接続-のリソースの確認方法について" class="headerlink" title="接続情報 (API 接続) のリソースの確認方法について"></a>接続情報 (API 接続) のリソースの確認方法について</h2><p>まず、この接続情報がどのように作成されるかご説明させていただきます。<br>Azure Logic Apps でコネクタをご利用になられる場合、以下のように当該サービスの認証に必要な接続情報を入力する画面が表示されます。</p><p><img src="/blog/LogicApps/ApiConnectionsDelete/image02.png"></p><p>ここで認証に必要な情報を入力し接続情報を作成すると、自動的にワークフローと同一のリソース グループに [API 接続]というリソースが作成されます。</p><p><img src="/blog/LogicApps/ApiConnectionsDelete/image03.png"></p><p>こちらのリソースがコネクタの接続情報を設定する画面で表示されている接続情報の内容になります。<br>なお、従量課金タイプの Azure Logic Apps ですと、ワークフローの画面左部より [開発者ツール] - [API 接続] を選択いただくことで内容を確認することが可能でございます。</p><p><img src="/blog/LogicApps/ApiConnectionsDelete/image04.png"></p><p>Standard タイプの Azure Logic Apps の場合は、[ワークフロー] - [接続] を選択頂くことで API 接続 を確認いただくことが可能でございます。</p><p><img src="/blog/LogicApps/ApiConnectionsDelete/image05.png"></p><p>以上が接続情報のリソースである [API 接続] の確認方法でした。</p><h2 id="接続情報-API-接続-のリソースの削除方法について"><a href="#接続情報-API-接続-のリソースの削除方法について" class="headerlink" title="接続情報 (API 接続) のリソースの削除方法について"></a>接続情報 (API 接続) のリソースの削除方法について</h2><p>次に、接続情報の削除方法についてご案内申し上げます。<br>本記事では従量課金タイプの Azure Logic Apps で利用している API 接続の削除方法をご説明いたします。</p><p>こちらにつきましては、当該リソースを削除することで既存の接続先を削除することが可能でございます。<br>以下にキャプチャと併せて削除例を記載いたしますので、参考までにご確認いただけますと幸いです。</p><p>＜削除例＞<br>1．対象の接続情報を確認する。<br><img src="/blog/LogicApps/ApiConnectionsDelete/image06.png"> </p><p>2．リソース グループを開く。<br><img src="/blog/LogicApps/ApiConnectionsDelete/image07.png"> </p><p>3．対象の API 接続が存在することを確認し、削除を選択。<br><img src="/blog/LogicApps/ApiConnectionsDelete/image08.png"> </p><p>4．再度、対象のリソースが表示されていることを確認し、削除の確認欄に “はい” と入力し、削除ボタンを選択。<br><img src="/blog/LogicApps/ApiConnectionsDelete/image09.png"> </p><p>5．削除されたことを確認したのち、Logic Apps のワークフローの接続情報作成時に削除した接続情報が表示されないことを確認する。<br><img src="/blog/LogicApps/ApiConnectionsDelete/image10.png"><br><img src="/blog/LogicApps/ApiConnectionsDelete/image11.png"> </p><p>以上より、誤った接続情報や不要になった接続情報を削除することが可能でございます。<br>ただし、こちらのリソースについては削除すると復元が出来ませんので、影響範囲を十分調査いただいたうえで削除頂ければと存じます。</p><p>参考までに、API 接続がどのリソースに紐づいているかを確認されたい場合、同一のリソース グループに閉じた情報ではありますが、リソース グループの画面より、以下のリソース ビジュアライザー という機能を利用することで視覚的に確認いただくことが可能です。</p><p><img src="/blog/LogicApps/ApiConnectionsDelete/image12.png"> </p><p>こちらも併せてご確認いただけますと幸いでございます。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内いたしましたが、ご理解いただけましたでしょうか。</p><ul><li>接続情報 (API 接続) のリソースの確認方法について</li><li>接続情報 (API 接続) のリソースの削除方法について</li></ul><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p><p>&lt;Azure Logic Apps の参考サイト&gt;<br>– 概要 - Azure Logic Apps とは<br><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview">https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview</a><br>Azure Logic Apps とは、ロジック アプリ デザイナーでフロー チャートを用いて作成したワークフローを自動実行するソリューションです。<br>Azure Logic Apps では、条件分岐などを実装することができ、ワークフローの実行状況に応じて実行する処理を分岐することが可能です。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは！Azure Integration サポート チームの 川合 です。  &lt;/p&gt;
&lt;p&gt;Azure Logic Apps でワークフローを作成する際に、コネクタの接続情報を設定する画面で以下のように複数項目が表示されることがあるかと思います。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/LogicApps/ApiConnectionsDelete/image01.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;今回はこの接続情報について、誤って作成してしまった場合や不要になった場合にどうやって削除すればよいかをご案内いたします。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>MSMQ をドメインモードでインストールする手順について</title>
    <link href="https://jpazinteg.github.io/blog/MSMQ/MsmqCleanInstall/"/>
    <id>https://jpazinteg.github.io/blog/MSMQ/MsmqCleanInstall/</id>
    <published>2022-05-13T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.235Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Integration サポート チームの 川合 です。<br>Azure Integration サポート チームでは Azure 製品以外にもオンプレミス製品を取り扱っておりますが、今回はその中でも MSMQ についてのご紹介と、ドメインモードでのインストール手順についてご紹介します。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>MSMQ について</li><li>MSMQ をドメインモードでインストールする手順について</li><li>ドメインモードのインストール失敗時の修正手順について</li><li>まとめ</li></ul><h2 id="MSMQ-について"><a href="#MSMQ-について" class="headerlink" title="MSMQ について"></a>MSMQ について</h2><p>MSMQ とは、弊社が提供するオンプレミス製品のメッセージ キューイング サービスです。</p><ul><li><a href="https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms711472(v=vs.85)">Message Queuing (MSMQ)</a></li></ul><p>通常のプログラムでは、実行中のプログラムはプログラム間のデータの送受信のタイミングを同期する必要があり、処理の開始・完了を待機する必要があります。<br>それに対してメッセージ キューイングでは、メッセージ ブローカーと呼ばれるソフトウェアがメッセージ キューと呼ばれるデータ保存領域に対してデータを管理し、データの送信側はデータの受信側の処理を待たなくてもデータをキューに書き出したタイミングで処理を完了させることができます。また、受信側も任意のタイミングでキューから取り出すことができ、非同期での処理が可能になります。</p><h2 id="MSMQ-をドメインモードでインストールする手順について"><a href="#MSMQ-をドメインモードでインストールする手順について" class="headerlink" title="MSMQ をドメインモードでインストールする手順について"></a>MSMQ をドメインモードでインストールする手順について</h2><p>MSMQ のインストールに関する公開情報については以下に記載がありますので、ご興味あります方はぜひご覧ください。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/dotnet/framework/wcf/samples/installing-message-queuing-msmq">メッセージ キュー (MSMQ) のインストール</a></li></ul><p>公開情報には Windows Vista や Windows 7 等の記載がありますが、お使いの Windows 10 や Windows Server 2008 以降の Windows Server 製品であればご利用いただくことが可能です。<br>ドメインに参加せずに MSMQ をご利用になられたい場合は、以下のように設定いただくことでワークグループモードとしてご利用いただくことが可能です。</p><p><img src="/blog/MSMQ/MsmqCleanInstall/image01.png"></p><p>ドメインに参加して MSMQ をご利用になられたい場合、公開情報に記載のあります通り、<br><strong>[ディレクトリ サービス統合] をクリックし (ドメインに参加するコンピューターの場合)、 [HTTP サポート] をクリックします。</strong><br>のように、[ディレクトリ サービス統合 (Directory Services Integration) ]  と [HTTP サポート]  のチェックボックスにチェックを設定し、ドメインモードとしてインストールしてください。</p><p><img src="/blog/MSMQ/MsmqCleanInstall/image02.png"></p><p>この時、それ以外のチェックについてはお客様のご要件に合わせて必要な項目のみチェックいただく必要がございます。<br>マルチキャスティング サポートやルーティング サービスについては、以下の公開情報の通り Active Directory Domain Servicesで適切なアクセス許可設定が必要となります。</p><ul><li><a href="https://docs.microsoft.com/en-US/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc730960(v=ws.11)?redirectedfrom=MSDN#to-grant-permissions-for-a-computer-object-to-the-servers-object-in-active-directory-domain-services-before-installing-the-routing-service-feature-on-a-computer-that-is-not-a-domain-controller">To grant permissions for a computer object to the Servers object in Active Directory Domain Services before installing the Routing Service feature on a computer that is not a domain controller</a></li></ul><p>【翻訳】<br>ドメインコントローラーではない Windows Server 2008 R2 のコンピューターにルーティングサービス機能を、ドメインコントローラーである Windows Server 2008 R2 のコンピューターにメッセージキューイングのディレクトリサービス統合機能を正しくインストールするには、Active Directory Domain Servicesに特定のアクセス許可を設定することが必要です。これらの機能をインストールする前に、以下の手順に従ってActive Directory Domain Servicesで適切なアクセス許可を付与してください<br>※ここで Windows Server 2008 R2 といった記載がありますが他の OS に関しても同様です。</p><p>上記の設定をせずにマルチキャスティング サポートやルーティング サービスのチェックボックスに設定をしてインストールした場合、正しくインストール出来ない場合がございますのでご留意ください。</p><h2 id="ドメインモードのインストール失敗時の修正手順について"><a href="#ドメインモードのインストール失敗時の修正手順について" class="headerlink" title="ドメインモードのインストール失敗時の修正手順について"></a>ドメインモードのインストール失敗時の修正手順について</h2><p>上記の公開情報を基にインストール作業を実施いただくことですぐに MSMQ をご利用いただくことが可能ですが、お客様の環境によってはインストール作業時にエラーになったり、ワークグループモードからドメインモードにインストールが出来ない場合がございます。どうしてもワークグループモードからドメインモードに変更できない場合、以下の操作を実施いただくことでドメインモードに切り替えることが出来ます。操作の実施にあたっては、レジストリの変更やサーバーの再起動を伴います。十分に作業計画を立て、事前に検証を実施したうえで実施をお願いいたします。</p><p>【修正手順】<br>1．MSMQ がインストールされているサーバーにログインし、サーバーマネージャーを起動する。</p><p>2．[役割と機能の追加]を選択する。<br> <img src="/blog/MSMQ/MsmqCleanInstall/image03.png"></p><p>3．[役割と機能の削除ウィザードの起動] を選択する。<br> <img src="/blog/MSMQ/MsmqCleanInstall/image04.png"></p><p>4．[Message Queuing] サービスについて全てチェックを外す。<br> <img src="/blog/MSMQ/MsmqCleanInstall/image05.png"></p><p>5．アンインストールが完了したら [閉じる] を選択する。<br> <img src="/blog/MSMQ/MsmqCleanInstall/image06.png"></p><p>※反映には再起動が必要となりますが、この時点では再起動はしません。</p><p>6．Windows キー + R キーを同時に押下し、[ファイル名を指定して実行] に “ regedit ” と入力して [OK] を選択。<br> <img src="/blog/MSMQ/MsmqCleanInstall/image07.png"></p><p>7．以下のレジストリキーを確認し、 “Workgroup”=dword:00000001 の場合、値を0に変更する。</p><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSMQ\Parameters<br>存在しない場合は手順の実施は不要。<br><img src="/blog/MSMQ/MsmqCleanInstall/image08.png"></p><p>8．ドメインコントローラーがインストールされているサーバーへログイン後、<br>[Active Directory ユーザーとコンピューター] を開き、[表示] を以下の設定にする。<br> <img src="/blog/MSMQ/MsmqCleanInstall/image09.png"></p><p>9．MSMQ がインストールされているサーバーより、MSMQ オブジェクトを削除する。<br>存在しない場合は手順の実施は不要。<br><img src="/blog/MSMQ/MsmqCleanInstall/image10.png"></p><p>10．以上の作業が完了後、MSMQ がインストールされているサーバーの再起動を実施する。<br>ドメインコントローラーがインストールされているサーバーについては作業は不要。</p><p>11．MSMQ がインストールされているサーバーに再度ログインし、<br>[ディレクトリ サービス統合 (Directory Services Integration) ] を有効にしてMSMQサービスを再インストールする。 </p><p>12．インストール完了後、MSMQ がインストールされているサーバーの再起動を実施する。<br>ドメインコントローラーがインストールされているサーバーについては作業は不要。</p><p>＜作業結果確認＞<br>作業後に以下の内容になっていることを確認。<br>・コンピューターの管理にパブリックキューが表示されている。<br>・Workgroup の値が 0 になっている。<br><img src="/blog/MSMQ/MsmqCleanInstall/image11.png"></p><p>以上、 MSMQ をドメインモードでインストールする方法と、インストール失敗時の修正手順についてご紹介させていただきました。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内いたしましたが、ご理解いただけましたでしょうか。</p><ul><li>MSMQ の概要</li><li>MSMQ をドメインモードでインストールする方法とインストール失敗時の修正手順</li></ul><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは！Azure Integration サポート チームの 川合 です。&lt;br&gt;Azure Integration サポート チームでは Azure 製品以外にもオンプレミス製品を取り扱っておりますが、今回はその中でも MSMQ についてのご紹介と、ドメインモードでのインストール手順についてご紹介します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="MSMQ" scheme="https://jpazinteg.github.io/blog/tags/MSMQ/"/>
    
  </entry>
  
  <entry>
    <title>Azure Logic Apps の Availability Zone 対応に伴う通知メールについて</title>
    <link href="https://jpazinteg.github.io/blog/LogicApps/AzNotificationMail/"/>
    <id>https://jpazinteg.github.io/blog/LogicApps/AzNotificationMail/</id>
    <published>2022-04-06T15:00:00.000Z</published>
    <updated>2022-12-23T09:16:42.187Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは！Azure Integration サポート チームの 川合 です。<br>つい先日、Azure Logic Apps が Availability Zone に対応するという情報が Tech Community のブログ記事で公開されましたね。</p><ul><li><a href="https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/azure-logic-apps-availability-zone-support-is-coming-soon/ba-p/3254456">Azure Logic Apps - Availability Zone support is coming soon</a></li></ul><p>こちらの要件に伴い、お客様の中では以下の件名でメールが届いた方もいらっしゃるのではないでしょうか。</p><p><strong>Action required: Update firewall configurations that allow or deny IP addresses of Azure Logic Apps</strong></p><p>今回は上記メール本文の概要と、お客様にてご対応いただく内容について整理いたしましたのでご案内させていただきます。</p><span id="more"></span><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>メール本文の概要について</li><li>本メールに対するアクション</li><li>まとめ</li></ul><h2 id="メール本文の概要について"><a href="#メール本文の概要について" class="headerlink" title="メール本文の概要について"></a>メール本文の概要について</h2><p>まず、本メールの概要については大きく以下の内容となります。</p><p><img src="/blog/LogicApps/AzNotificationMail/image01.png"></p><p>・2022 年 3 月 25 日より、アベイラビリティ ゾーンをサポートするため Azure Logic Apps で利用する IP アドレスの追加が予定されている。<br>・Azure Logic Apps の IP アドレスとの通信を許可するファイアウォール設定がある場合、2022 年 5 月 15 日までに Azure Logic Apps とコネクタの両方について新しいアドレスに更新する必要がある。<br>・既存および新規で作成する Azure Logic Apps に今回追加される IP アドレスが利用される。</p><p>以上が本メールの概要となります。</p><h2 id="本メールに対するアクション"><a href="#本メールに対するアクション" class="headerlink" title="本メールに対するアクション"></a>本メールに対するアクション</h2><p>お客様にご対応いただく内容として、メールにも記載されております通り ファイアウォール の設定変更がございます。</p><p>ここで記載されております　<strong>ファイアウォール</strong>　が何を指しているかですが、Azure Firewall だけではなく、ネットワーク セキュリティ グループやストレージ アカウントのファイアウォール等、Azure Logic Apps からの IP アドレス通信制御を行っている全てのリソースを指します。</p><p>また、通信制御については受信規則と送信規則の大きく二つの考え方がございます。 Azure Logic Apps から送られてくる通信に対して制御をしている場合は受信規則のルールに対して Azure Logic Apps の IP アドレスを設定する必要がございます。逆に Azure Logic Apps へ送信するような通信制御をされている場合は、送信規則のルールに対して Azure Logic Apps の IP アドレスを設定いただく必要がございます。</p><p>例えば、ストレージ アカウントのファイアウォールにて、Azure Logic Apps の送信 IP アドレスを許可されている場合、<br>IP アドレスが変更となりますのでファイアウォール側の設定を見直していただく必要がございます。</p><p><img src="/blog/LogicApps/AzNotificationMail/image02.png"></p><p>ファイアウォールに対して設定すべき IP アドレスにつきましては、以下の通りご利用いただいておりますコネクタの種類によって異なります。</p><p>マネージド コネクタをご利用されている際には、<br>以下の公開情報の該当リージョンの IP アドレスをすべて追加いただきますようお願いいたします。</p><p>&lt;ご参考情報&gt;</p><ul><li><a href="https://docs.microsoft.com/ja-JP/connectors/common/outbound-ip-addresses#azure-logic-apps">マネージド コネクタのアウトバウンド IP アドレス</a></li></ul><p>組み込みトリガー、アクションをご利用されている際には、<br>以下の公開情報の該当リージョンの IP アドレスをすべて追加いただきますようお願いいたします。</p><p>&lt;ご参考情報&gt;</p><ul><li><a href="https://docs.microsoft.com/ja-JP/azure/logic-apps/logic-apps-limits-and-config?tabs=azure-portal#multi-tenant--single-tenant---outbound-ip-addresses">Azure Logic Apps の制約と構成の参考文献 # マルチテナントとシングルテナント - 送信 IP アドレス</a></li></ul><p>ファイアウォール経由で、Azure Logic Apps への 通信を制御している際には、<br>以下の公開情報の該当リージョンの IP アドレスをすべて追加いただきますようお願いいたします。</p><p>&lt;ご参考情報&gt;</p><ul><li><a href="https://docs.microsoft.com/ja-JP/azure/logic-apps/logic-apps-limits-and-config?tabs=azure-portal#inbound-ip-addresses">Azure Logic Apps の制約と構成の参考文献 # 受信 IP アドレス</a></li></ul><p>なお、お客様のコネクタでご利用されているサービスについて、これまで特にファイアウォール等の設定をしておらず、<br>Azure Logic Apps の送信 IP アドレスをブロックしていない際には、対応は不要となります。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>本記事では、以下についてご案内いたしましたが、ご理解いただけましたでしょうか。</p><ul><li>メール本文の概要について</li><li>本メールに対するアクション</li></ul><p>本記事が少しでもお役に立ちましたら幸いです。最後までお読みいただき、ありがとうございました！</p><p>&lt;Azure Logic Apps の参考サイト&gt;<br>– 概要 - Azure Logic Apps とは<br><a href="https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview">https://docs.microsoft.com/ja-jp/azure/logic-apps/logic-apps-overview</a><br>Azure Logic Apps とは、ロジック アプリ デザイナーでフロー チャートを用いて作成したワークフローを自動実行するソリューションです。<br>Azure Logic Apps では、条件分岐などを実装することができ、ワークフローの実行状況に応じて実行する処理を分岐することが可能です。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは！Azure Integration サポート チームの 川合 です。&lt;br&gt;つい先日、Azure Logic Apps が Availability Zone に対応するという情報が Tech Community のブログ記事で公開されましたね。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/azure-logic-apps-availability-zone-support-is-coming-soon/ba-p/3254456&quot;&gt;Azure Logic Apps - Availability Zone support is coming soon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こちらの要件に伴い、お客様の中では以下の件名でメールが届いた方もいらっしゃるのではないでしょうか。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action required: Update firewall configurations that allow or deny IP addresses of Azure Logic Apps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;今回は上記メール本文の概要と、お客様にてご対応いただく内容について整理いたしましたのでご案内させていただきます。&lt;/p&gt;</summary>
    
    
    
    
    <category term="How-To" scheme="https://jpazinteg.github.io/blog/tags/How-To/"/>
    
    <category term="Tips" scheme="https://jpazinteg.github.io/blog/tags/Tips/"/>
    
    <category term="Azure Integration" scheme="https://jpazinteg.github.io/blog/tags/Azure-Integration/"/>
    
    <category term="Azure Logic Apps" scheme="https://jpazinteg.github.io/blog/tags/Azure-Logic-Apps/"/>
    
  </entry>
  
  <entry>
    <title>Integration サポート チームの Blog リニューアルのお知らせ</title>
    <link href="https://jpazinteg.github.io/blog/general/IntroduceOurBlog/"/>
    <id>https://jpazinteg.github.io/blog/general/IntroduceOurBlog/</id>
    <published>2022-03-18T07:50:00.000Z</published>
    <updated>2022-12-23T09:16:42.271Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Blog-リニューアルのお知らせ"><a href="#Blog-リニューアルのお知らせ" class="headerlink" title="Blog リニューアルのお知らせ"></a>Blog リニューアルのお知らせ</h2><p>こんにちは、Integration サポート チームです。<br>この度、Integration サポート チームのブログをリニューアルいたしましたのでお知らせします！</p><span id="more"></span><p>こちらのブログでは、Integration 製品のテクノロジーに関する話題を中心に情報を発信していきます。<br>開発部門などからも多くの公式な公開情報を提供しておりますが、私たちのブログでは、新機能に関してのご紹介だけでなく、日本の多くの Integration 製品のご利用者からサポートの依頼を直接受けているサポート エンジニアという立場から、時には私どもの視点を交えて、皆様のお役に立つ情報をご案内したいと思います。<br>これから本ブログで公開していく情報の一例を以下に記載しました。</p><h3 id="公開する情報の例"><a href="#公開する情報の例" class="headerlink" title="公開する情報の例"></a>公開する情報の例</h3><ul><li>リリースされたばかりの新機能に関する情報</li><li>よくサポート チームにお問い合わせいただく “あるある” な問題への対処方法</li><li>Integration 製品 を利用するユーザーの方に是非お伝えしたい情報 </li><li>ある問題についてサポートにお問い合わせいただく際、スムーズに調査を進めるために事前に採取いただきたい情報</li></ul><h3 id="本ブログで扱うテクノロジーの例"><a href="#本ブログで扱うテクノロジーの例" class="headerlink" title="本ブログで扱うテクノロジーの例"></a>本ブログで扱うテクノロジーの例</h3><ul><li>Azure Logic Apps</li><li>Microsoft BizTalk Server</li><li>Microsoft Host Integration Server</li><li>Microsoft Message Queue (MSMQ) </li><li>Workflow Manager</li></ul><p>これから様々な情報を発信しますので、こちらのブログが皆さまのお役に立てれば幸いです。<br>また、実際のサポート サービスでは、製品動作に関する正式な見解のご提供、そして問題解決のサポートを行っていますので、こちらも併せてよろしくお願いいたします！</p><p>※ これまで公開していたフォーラムは以下のリンクからアクセスできますので、過去の情報はこちらからご確認ください。<br><a href="https://social.technet.microsoft.com/Forums/ja-JP/home">以前のフォーラム (アーカイブ) はこちら</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Blog-リニューアルのお知らせ&quot;&gt;&lt;a href=&quot;#Blog-リニューアルのお知らせ&quot; class=&quot;headerlink&quot; title=&quot;Blog リニューアルのお知らせ&quot;&gt;&lt;/a&gt;Blog リニューアルのお知らせ&lt;/h2&gt;&lt;p&gt;こんにちは、Integration サポート チームです。&lt;br&gt;この度、Integration サポート チームのブログをリニューアルいたしましたのでお知らせします！&lt;/p&gt;</summary>
    
    
    
    
    <category term="General" scheme="https://jpazinteg.github.io/blog/tags/General/"/>
    
  </entry>
  
</feed>
